{
  "basePath": "https://beta.openphacts.org/1.3/",
  "apiVersion": "v1.3",
  "apis": [
    {
"path": "/mapUri" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Map URL" ,
          "description":  "Returns a set of URLs associated to the input URL.<br><hr><br>Response template: <br><br><hr><br>  &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> foaf:primaryTopic ?primaryTopic </span> .<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> ?primaryTopic foaf:isPrimaryTopicOf </span> .<br> ?primaryTopic <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:exactMatch ?url </span> .<br> ",
          "group": "Mapping service betweem URLs" ,
          "parameters": [
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "Uri" ,
              "description":  "An input Uri to be mapped." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "targetUriPattern" ,
              "description":  "List of URI patterns separated by '|' characters. Limits the results to ones with URIs with this pattern(s)." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "graph" ,
              "description":  "Limits the results to ones required for this OpenRdf context/graph." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "lensUri" ,
              "description":  "Lens URI." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
"path": "/compound" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Compound Information" ,
          "description":  "Returns information about a single compound that corresponds to {uri}.<br><hr><br>Response template: <br><br><hr><br>  ?ops_item <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:exactMatch ?cw_compound_uri </span> .<br> ?cw_compound_uri <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:prefLabel ?compound_name </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://www.conceptwiki.org&gt; </span> .<br> ?ops_item <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:exactMatch ?ocrs_compound_uri </span> .<br> ?ocrs_compound_uri <span style=\"BACKGROUND-COLOR: #66FFCC\"> ops:smiles ?smiles </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> ops:inchi ?inchi </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> ops:inchikey ?inchiKey </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops:logp ?alogp </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops:hba ?hba </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops:hbd ?hbd </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops:ro5_violations ?num_ro5_violations </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops:psa ?psa </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops:rtb ?rtb </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops:molweight ?molweight </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops:molformula ?molformula </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://ops.rsc.org&gt; </span> .<br> ?ops_item <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:exactMatch ?chembl_compound_uri </span> .<br> ?chembl_compound_uri <span style=\"BACKGROUND-COLOR: #FFFFCC\"> ?bNode1 ?mw_freebase </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> a ?mol_type </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://www.ebi.ac.uk/chembl&gt; </span> .<br> ?ops_item <span style=\"BACKGROUND-COLOR: #FFCC99\"> skos:exactMatch ?db_compound_uri </span> .<br> ?db_compound_uri <span style=\"BACKGROUND-COLOR: #FFFFCC\"> drugbank:biotransformation ?biotransformation </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> drugbank:description ?description </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> drugbank:proteinBinding ?proteinBinding </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> drugbank:toxicity ?toxicity </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> drugbank:meltingPoint ?meltingPoint </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> drugbank:genericName ?drug_name </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> drugbank:drugType ?drugType </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://linkedlifedata.com/resource/drugbank&gt; </span> .<br> ",
          "group": "Compound" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "A compound URI. e.g.: http://www.conceptwiki.org/concept/38932552-111f-4a4e-a46a-4ed1d7bdf9d5" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name": "_lens",
              "description": "The Lens name",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
"path": "/compound/members/count" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Compound Class Members: Count" ,
          "description":  "The number of compounds classified with the given class in the supported hierarchies. Currently the only supported hierarchy is the ChEBI Ontology.<br><hr><br>Response template: <br><br><hr><br>  ?ops_item <span style=\"BACKGROUND-COLOR: #66FFCC\"> ops:memberCount ?count </span> .<br> ",
          "group": "Compound" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "A class URI from one of the supported hierarchies. e.g.: http://purl.obolibrary.org/obo/CHEBI_24431" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name": "_lens",
              "description": "The Lens name",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
"path": "/compound/members/pages" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Compound Class Members: List" ,
          "description":  "A list of compounds classified with the given class in the supported hierarchies. Currently the only supported hierarchy is the ChEBI Ontology.<br><hr><br>Response template: <br><br><hr><br>  ?item <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:exactMatch ?compound_ocrs </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp; <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:exactMatch ?compound_cw </span> .<br> ?compound_cw <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:prefLabel ?compound_nam </span> e<br> ",
          "group": "Compound" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "A class URI from one of the supported hierarchies. e.g.: http://purl.obolibrary.org/obo/CHEBI_24431" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name": "_page",
              "description": "A number; the page that should be viewed",
              "dataType": "integer",
              "paramType": "query"
            },
            {
              "name": "_pageSize",
              "description": "The desired page size. Set to all to retrieve all results in a single page.",
              "dataType": "integer",
              "paramType": "query"
            },
            {
              "name": "_orderBy",
              "description": "The desired variable to sort by. Multiple values can be specified seperated by spaces. Direction of sort can be specified with ASC(?var) and DESC(?var). Default is ascending",
              "allowableValues": {
                "values": [
                  "?chebi_compound",
                  "DESC(?chebi_compound)",
                  "?child_node",
                  "DESC(?child_node)",
                  "?compound_cw",
                  "DESC(?compound_cw)",
                  "?compound_name",
                  "DESC(?compound_name)",
                  "?compound_ocrs",
                  "DESC(?compound_ocrs)",
                  "?item",
                  "DESC(?item)",
                  "?ops_item",
                  "DESC(?ops_item)"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_lens",
              "description": "The Lens name",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
"path": "/compound/classifications" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Compound Classifications" ,
          "description":  "The classes the given compound URI has been classified with. Currently supported hierarchies are the ChEBI Ontology and the Gene Ontology. <br><hr><br>Response template: <br><br><hr><br>  ?ops_item <span style=\"BACKGROUND-COLOR: #FFFFCC\"> skos:exactMatch ?chembl_compound_uri </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> skos:exactMatch ?cw_compound_uri </span> .<br> ?chembl_compound_uri <span style=\"BACKGROUND-COLOR: #FFCC99\"> ops:hasChebiClassification ?chebi_class </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFCC99\"> ops:hasChebiClassification ?chebi_other_class </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> void:inDataset &lt;http://www.ebi.ac.uk/chembl&gt; </span> .<br> ?chebi_input <span style=\"BACKGROUND-COLOR: #FFCC99\"> ops:hasGoClassification ?go_class </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> skos:prefLabel ?chebi_input_label </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> void:inDataset &lt;http://www.geneontology.org&gt; </span> .<br> ?go_input <span style=\"BACKGROUND-COLOR: #FFCC99\"> ops:hasChebiClassification ?chebi_class </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> skos:prefLabel ?go_input_label </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> void:inDataset &lt;http://www.ebi.ac.uk/chembl&gt; </span> .<br> ?cw_compound_uri <span style=\"BACKGROUND-COLOR: #FFFFCC\"> skos:prefLabel ?cw_label </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> void:inDataset &lt;http://www.conceptwiki.org&gt; </span> .<br> ?chebi_class <span style=\"BACKGROUND-COLOR: #FFFFCC\"> skos:prefLabel ?chebi_label </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops:classificationType rdf:type </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> void:inDataset &lt;http://www.ebi.ac.uk/chebi&gt; </span> .<br> rdf:type <span style=\"BACKGROUND-COLOR: #FFFFCC\"> skos:prefLabel 'Type' </span> .<br> ?chebi_other_class <span style=\"BACKGROUND-COLOR: #FFFFCC\"> skos:prefLabel ?chebi_other_label </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops:classificationType ?chebi_class_type </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> void:inDataset &lt;http://www.ebi.ac.uk/chebi&gt; </span> .<br> ?chebi_class_type <span style=\"BACKGROUND-COLOR: #FFFFCC\"> skos:prefLabel ?chebi_class_type_label </span> .<br> ?go_class <span style=\"BACKGROUND-COLOR: #FFFFCC\"> skos:prefLabel ?go_label </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> void:inDataset &lt;http://www.geneontology.org&gt; </span> .<br> &lt;http://www.ebi.ac.uk/chebi&gt; <span style=\"BACKGROUND-COLOR: #FFFFCC\"> skos:prefLabel 'ChEBI Ontology' </span> .<br> &lt;http://www.geneontology.org&gt; <span style=\"BACKGROUND-COLOR: #FFFFCC\"> skos:prefLabel 'GeneOntology' </span> .<br> ",
          "group": "Compound" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "A compound URI.  e.g.: http://ops.rsc.org/OPS6958" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "tree" ,
              "description":  "Restrict results by hierarchy. Currently one of 'chebi', 'go'" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "_lens",
              "description": "The Lens name",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
"path": "/compound/classificationsForTargets" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Classification of Targets for Compound" ,
          "description":  "The hierarchy of classes for the different Targets that interact with a given Compound. Currently supported hierarchies are the Enzyme Classification, the ChEMBL Target Tree and the Gene Ontology. <br><hr><br>Response template: <br><br><hr><br>  ?ops_item <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:exactMatch ?chembl_compound_uri </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:exactMatch ?cw_compound_uri </span> .<br> ?chembl_compound_uri <span style=\"BACKGROUND-COLOR: #A9A9F5\"> ops:interactsWithTargetOfClass ?class </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://www.ebi.ac.uk/chembl&gt; </span> .<br> ?cw_compound_uri <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:prefLabel ?cw_label </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://www.conceptwiki.org&gt; </span> .<br> ?class <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:prefLabel ?class_label </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset ?g </span> .<br> &lt;http://purl.uniprot.org/enzyme&gt; <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:prefLabel 'Enzyme Classification' </span> .<br> &lt;http://www.ebi.ac.uk/chembl&gt; <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:prefLabel 'ChEMBL Target Hierarchy' </span> .<br> &lt;http://www.geneontology.org&gt; <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:prefLabel 'GeneOntology' </span> .<br> ",
          "group": "Compound" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "A compound URI.  e.g.: http://ops.rsc.org/OPS6958" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "tree" ,
              "description":  "Restrict results by hierarchy. Currently one of 'chembl', 'enzyme', 'go'" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "assay_organism" ,
              "description":  "A literal organism in ChEMBL." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "target_organism" ,
              "description":  "A literal target organism in ChEMBL." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "activity_type" ,
              "description":  "One of the activity types listed at /pharmacology/filters/activities" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "activity_value" ,
              "description":  "Return activity values equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "min-activity_value" ,
              "description":  "Return activity values greater than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "minEx-activity_value" ,
              "description":  "Return activity values greater than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "max-activity_value" ,
              "description":  "Return activity values less than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "maxEx-activity_value" ,
              "description":  "Return activity values less than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "activity_unit" ,
              "description":  "The unit in which {activity_value} is given. See /pharmacology/filters/units/{activity_type} for allowed valued. For e.g. IC50: /pharmacology/filters/units/IC50" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "activity_relation" ,
              "description":  ">, >=,= , < , <=" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "assay_organism" ,
              "description":  "A literal organism in ChEMBL." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "pChembl" ,
              "description":  "Return activities with a pChembl value equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "min-pChembl" ,
              "description":  "Return activities with a pChembl value greater than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "minEx-pChembl" ,
              "description":  "Return activities with a pChembl value greater than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "max-pChembl" ,
              "description":  "Return activities with a pChembl value less than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "maxEx-pChembl" ,
              "description":  "Return activities with a pChembl value less than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name": "_lens",
              "description": "The Lens name",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
"path": "/compound/pharmacology/count" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Compound Pharmacology: Count" ,
          "description":  "The total number of acitivity values in the LDC for a given compound<br><hr><br>Response template: <br><br><hr><br>  ?ops_item <span style=\"BACKGROUND-COLOR: #66FFCC\"> ops:compoundPharmacologyTotalResults ?count </span> .<br> ",
          "group": "Compound" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "A compound URI. e.g.: http://www.conceptwiki.org/concept/38932552-111f-4a4e-a46a-4ed1d7bdf9d5" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "assay_organism" ,
              "description":  "A literal organism in ChEMBL." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "target_organism" ,
              "description":  "A literal target organism in ChEMBL." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "activity_type" ,
              "description":  "One of the activity types listed at /pharmacology/filters/activities" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "activity_value" ,
              "description":  "Return activity values equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "min-activity_value" ,
              "description":  "Return activity values greater than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "minEx-activity_value" ,
              "description":  "Return activity values greater than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "max-activity_value" ,
              "description":  "Return activity values less than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "maxEx-activity_value" ,
              "description":  "Return activity values less than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "activity_unit" ,
              "description":  "The unit in which {activity_value} is given. See /pharmacology/filters/units/{activity_type} for allowed valued. For e.g. IC50: /pharmacology/filters/units/IC50" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "activity_relation" ,
              "description":  ">, >=,= , < , <=" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "pChembl" ,
              "description":  "Return activities with a pChembl value equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "min-pChembl" ,
              "description":  "Return activities with a pChembl value greater than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "minEx-pChembl" ,
              "description":  "Return activities with a pChembl value greater than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "max-pChembl" ,
              "description":  "Return activities with a pChembl value less than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "maxEx-pChembl" ,
              "description":  "Return activities with a pChembl value less than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "target_type" ,
              "description":  "One of the types listed at /target/types. e.g. single_protein" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "_lens",
              "description": "The Lens name",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
"path": "/compound/pharmacology/pages" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Compound Pharmacology: List" ,
          "description":  "A page of items corresponding to acitivity values in the LDC for a given compound<br><hr><br>Response template: <br><br><hr><br>  ?item <span style=\"BACKGROUND-COLOR: #66FFCC\"> chembl:hasMolecule ?chembl_compound_uri </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:standardType ?activity_type </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:standardRelation ?activity_relation </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:standardValue ?activity_value </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:hasQUDT ?qudt_uri </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:publishedType ?published_type </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:publishedRelation ?published_relation </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:publishedValue ?published_value </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:publishedUnits ?published_unit </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:pChembl ?pChembl </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:activityComment ?act_comment </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> chembl:hasAssay ?assay_uri </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFCC99\"> chembl:hasDocument ?doi </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFCC99\"> bibo:pmid ?pmid </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://www.ebi.ac.uk/chembl&gt; </span> .<br> ?qudt_uri <span style=\"BACKGROUND-COLOR: #FFFFCC\"> skos:prefLabel ?activity_unit </span> .<br> ?assay_uri <span style=\"BACKGROUND-COLOR: #A9A9F5\"> chembl:hasTarget ?target_uri </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:assayOrganismName ?assay_organism </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:assayTestType ?assay_type </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> dcterms:description ?assay_description </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://www.ebi.ac.uk/chembl&gt; </span> .<br> ?target_uri <span style=\"BACKGROUND-COLOR: #FFFFCC\"> dcterms:title ?target_name </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:targetOrganismName ?target_organism </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFCC99\"> chembl:hasTargetComponent ?protein </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> a ?target_type </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://www.ebi.ac.uk/chembl&gt; </span> .<br> ?chembl_compound_uri <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:exactMatch ?cw_compound_uri </span> .<br> ?protein <span style=\"BACKGROUND-COLOR: #FFFFCC\"> skos:exactMatch ?cw_target </span> .<br> ?cw_target <span style=\"BACKGROUND-COLOR: #FFFFCC\"> skos:prefLabel ?protein_name </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://www.conceptwiki.org&gt; </span> .<br> ?cw_compound_uri <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:prefLabel ?compound_name </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://www.conceptwiki.org&gt; </span> .<br> ?chembl_compound_uri <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:exactMatch ?ocrs_compound_uri </span> .<br> ?ocrs_compound_uri <span style=\"BACKGROUND-COLOR: #66FFCC\"> ops:smiles ?smiles </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> ops:inchi ?inchi </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> ops:inchikey ?inchiKey </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops:molweight ?molweight </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops:ro5_violations ?num_ro5_violations </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://ops.rsc.org&gt; </span> .<br> ?chembl_compound_uri <span style=\"BACKGROUND-COLOR: #FFFFCC\"> skos:exactMatch ?db_compound_uri </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://www.ebi.ac.uk/chembl&gt; </span> .<br> ?db_compound_uri <span style=\"BACKGROUND-COLOR: #FFCC99\"> drugbank:drugType ?drugType </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> drugbank:genericName ?drug_name </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://linkedlifedata.com/resource/drugbank&gt; </span> .<br> ",
          "group": "Compound" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "A compound URI. e.g.: http://www.conceptwiki.org/concept/38932552-111f-4a4e-a46a-4ed1d7bdf9d5" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "target_organism" ,
              "description":  "A literal target organism in ChEMBL." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "activity_type" ,
              "description":  "One of the activity types listed at /pharmacology/filters/activities" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "activity_value" ,
              "description":  "Return activity values equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "min-activity_value" ,
              "description":  "Return activity values greater than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "minEx-activity_value" ,
              "description":  "Return activity values greater than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "max-activity_value" ,
              "description":  "Return activity values less than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "maxEx-activity_value" ,
              "description":  "Return activity values less than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "activity_unit" ,
              "description":  "The unit in which {activity_value} is given. See /pharmacology/filters/units/{activity_type} for allowed valued. For e.g. IC50: /pharmacology/filters/units/IC50" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "activity_relation" ,
              "description":  ">, >=,= , < , <=" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "assay_organism" ,
              "description":  "A literal assay organism in ChEMBL." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "pChembl" ,
              "description":  "Return activities with a pChembl value equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "min-pChembl" ,
              "description":  "Return activities with a pChembl value greater than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "minEx-pChembl" ,
              "description":  "Return activities with a pChembl value greater than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "max-pChembl" ,
              "description":  "Return activities with a pChembl value less than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "maxEx-pChembl" ,
              "description":  "Return activities with a pChembl value less than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "target_type" ,
              "description":  "One of the types listed at /target/types. e.g. single_protein" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "_page",
              "description": "A number; the page that should be viewed",
              "dataType": "integer",
              "paramType": "query"
            },
            {
              "name": "_pageSize",
              "description": "The desired page size. Set to all to retrieve all results in a single page.",
              "dataType": "integer",
              "paramType": "query"
            },
            {
              "name": "_orderBy",
              "description": "The desired variable to sort by. Multiple values can be specified seperated by spaces. Direction of sort can be specified with ASC(?var) and DESC(?var). Default is ascending",
              "allowableValues": {
                "values": [
                  "?act_comment",
                  "DESC(?act_comment)",
                  "?activity_relation",
                  "DESC(?activity_relation)",
                  "?activity_type",
                  "DESC(?activity_type)",
                  "?activity_unit",
                  "DESC(?activity_unit)",
                  "?activity_value",
                  "DESC(?activity_value)",
                  "?assay_description",
                  "DESC(?assay_description)",
                  "?assay_organism",
                  "DESC(?assay_organism)",
                  "?assay_type",
                  "DESC(?assay_type)",
                  "?assay_uri",
                  "DESC(?assay_uri)",
                  "?chembl_compound_uri",
                  "DESC(?chembl_compound_uri)",
                  "?compound_name",
                  "DESC(?compound_name)",
                  "?cw_compound_uri",
                  "DESC(?cw_compound_uri)",
                  "?cw_target",
                  "DESC(?cw_target)",
                  "?db_compound_uri",
                  "DESC(?db_compound_uri)",
                  "?doc_uri",
                  "DESC(?doc_uri)",
                  "?doi",
                  "DESC(?doi)",
                  "?drugType",
                  "DESC(?drugType)",
                  "?drugType_uri",
                  "DESC(?drugType_uri)",
                  "?drug_name",
                  "DESC(?drug_name)",
                  "?inchi",
                  "DESC(?inchi)",
                  "?inchiKey",
                  "DESC(?inchiKey)",
                  "?item",
                  "DESC(?item)",
                  "?molweight",
                  "DESC(?molweight)",
                  "?num_ro5_violations",
                  "DESC(?num_ro5_violations)",
                  "?ocrs_compound_uri",
                  "DESC(?ocrs_compound_uri)",
                  "?pChembl",
                  "DESC(?pChembl)",
                  "?pmid",
                  "DESC(?pmid)",
                  "?protein",
                  "DESC(?protein)",
                  "?protein_name",
                  "DESC(?protein_name)",
                  "?published_relation",
                  "DESC(?published_relation)",
                  "?published_type",
                  "DESC(?published_type)",
                  "?published_unit",
                  "DESC(?published_unit)",
                  "?published_value",
                  "DESC(?published_value)",
                  "?qudt_uri",
                  "DESC(?qudt_uri)",
                  "?smiles",
                  "DESC(?smiles)",
                  "?standard_value",
                  "DESC(?standard_value)",
                  "?target_name",
                  "DESC(?target_name)",
                  "?target_organism",
                  "DESC(?target_organism)",
                  "?target_type",
                  "DESC(?target_type)",
                  "?target_uri",
                  "DESC(?target_uri)"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_lens",
              "description": "The Lens name",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
"path": "/compound/tree/pharmacology/count" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Compound Class Pharmacology: Count" ,
          "description":  "The total number of activity values in the LDC for a given Compound class. Currently only the ChEBI Ontology is supported. <br><hr><br>Response template: <br><br><hr><br>  ?ops_item <span style=\"BACKGROUND-COLOR: #66FFCC\"> ops:compoundPharmacologyTotalResults ?count </span> .<br> ",
          "group": "Compound" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "A ChEBI Class URI. e.g.: http://purl.obolibrary.org/obo/CHEBI_24431" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "target_organism" ,
              "description":  "A literal target organism in ChEMBL." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "assay_organism" ,
              "description":  "A literal organism in ChEMBL." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "activity_type" ,
              "description":  "One of the activity types listed at /pharmacology/filters/activities" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "activity_value" ,
              "description":  "Return activity values equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "min-activity_value" ,
              "description":  "Return activity values greater than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "minEx-activity_value" ,
              "description":  "Return activity values greater than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "max-activity_value" ,
              "description":  "Return activity values less than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "maxEx-activity_value" ,
              "description":  "Return activity values less than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "activity_unit" ,
              "description":  "The unit in which {activity_value} is given. See /pharmacology/filters/units/{activity_type} for allowed valued. For e.g. IC50: /pharmacology/filters/units/IC50" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "activity_relation" ,
              "description":  ">, >=,= , < , <=" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "pChembl" ,
              "description":  "Return activities with a pChembl value equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "min-pChembl" ,
              "description":  "Return activities with a pChembl value greater than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "minEx-pChembl" ,
              "description":  "Return activities with a pChembl value greater than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "max-pChembl" ,
              "description":  "Return activities with a pChembl value less than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "maxEx-pChembl" ,
              "description":  "Return activities with a pChembl value less than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "target_type" ,
              "description":  "One of the types listed at /target/types. e.g. single_protein" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "_lens",
              "description": "The Lens name",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
"path": "/compound/tree/pharmacology/pages" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Compound Class Pharmacology: List" ,
          "description":  "A page of items corresponding to acitivity values for a given Compound class. Currently only the ChEBI Ontology is supported.<br><hr><br>Response template: <br><br><hr><br>  ?item <span style=\"BACKGROUND-COLOR: #66FFCC\"> chembl:hasMolecule ?compound_chembl </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp; <span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:standardType ?activity_type </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp; <span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:standardRelation ?activity_relation </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp; <span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:standardValue ?activity_value </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp; <span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:hasQUDT ?qudt_uri </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp; <span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:publishedType ?published_type </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp; <span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:publishedRelation ?published_relation </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp; <span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:publishedValue ?published_value </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp; <span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:publishedUnits ?published_unit </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp; <span style=\"BACKGROUND-COLOR: #66FFCC\"> chembl:hasAssay ?assay_uri </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp; <span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:pChembl ?pChembl </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp; <span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:activityComment ?act_comment </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp; <span style=\"BACKGROUND-COLOR: #FFCC99\"> chembl:hasDocument ?doi </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp; <span style=\"BACKGROUND-COLOR: #FFCC99\"> bibo:pmid ?pmid </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp; <span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://www.ebi.ac.uk/chembl&gt; </span> .<br> ?qudt_uri <span style=\"BACKGROUND-COLOR: #FFFFCC\"> skos:prefLabel ?activity_unit </span> .<br> ?assay_uri <span style=\"BACKGROUND-COLOR: #A9A9F5\"> chembl:hasTarget ?target_uri </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp; <span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:assayOrganismName ?assay_organism </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp; <span style=\"BACKGROUND-COLOR: #FFFFCC\"> dcterms:description ?assay_description </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp; <span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:assayTestType ?assay_type </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp; <span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://www.ebi.ac.uk/chembl&gt; </span> .<br> ?target_uri <span style=\"BACKGROUND-COLOR: #66FFCC\"> dcterms:title ?target_name </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp; <span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:targetOrganismName ?target_organism </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp; <span style=\"BACKGROUND-COLOR: #FFCC99\"> chembl:hasTargetComponent ?protein </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp; <span style=\"BACKGROUND-COLOR: #66FFCC\"> a ?target_type </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp; <span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://www.ebi.ac.uk/chembl&gt; </span> .<br> ?compound_chembl <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:exactMatch ?compound_cw </span> .<br> ?protein <span style=\"BACKGROUND-COLOR: #FFFFCC\"> skos:exactMatch ?cw_target </span> .<br> ?cw_target <span style=\"BACKGROUND-COLOR: #FFFFCC\"> skos:prefLabel ?protein_name </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp; <span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://www.conceptwiki.org&gt; </span> .<br> ?compound_cw <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:prefLabel ?compound_name </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp; <span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://www.conceptwiki.org&gt; </span> .<br> ?compound_chembl <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:exactMatch ?compound_ocrs </span> .<br> ?compound_ocrs <span style=\"BACKGROUND-COLOR: #66FFCC\"> ops:smiles ?smiles </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp; <span style=\"BACKGROUND-COLOR: #66FFCC\"> ops:inchi ?inchi </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp; <span style=\"BACKGROUND-COLOR: #66FFCC\"> ops:inchikey ?inchiKey </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp; <span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops:ro5_violations ?num_ro5_violations </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp; <span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops:molweight ?molweight </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp; <span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://ops.rsc.org&gt; </span> .<br> ?compound_chembl <span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://www.ebi.ac.uk/chembl&gt; </span> .<br> ",
          "group": "Compound" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "A ChEBI Class URI. e.g.: http://purl.obolibrary.org/obo/CHEBI_24431" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "assay_organism" ,
              "description":  "A literal organism in ChEMBL." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "target_organism" ,
              "description":  "A literal target organism in ChEMBL." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "activity_type" ,
              "description":  "One of the activity types listed at /pharmacology/filters/activities" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "activity_value" ,
              "description":  "Return activity values equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "min-activity_value" ,
              "description":  "Return activity values greater than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "minEx-activity_value" ,
              "description":  "Return activity values greater than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "max-activity_value" ,
              "description":  "Return activity values less than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "maxEx-activity_value" ,
              "description":  "Return activity values less than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "activity_unit" ,
              "description":  "The unit in which {activity_value} is given. See /pharmacology/filters/units/{activity_type} for allowed valued. For e.g. IC50: /pharmacology/filters/units/IC50" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "activity_relation" ,
              "description":  ">, >=,= , < , <=" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "pChembl" ,
              "description":  "Return activities with a pChembl value equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "min-pChembl" ,
              "description":  "Return activities with a pChembl value greater than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "minEx-pChembl" ,
              "description":  "Return activities with a pChembl value greater than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "max-pChembl" ,
              "description":  "Return activities with a pChembl value less than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "maxEx-pChembl" ,
              "description":  "Return activities with a pChembl value less than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "target_type" ,
              "description":  "One of the types listed at /target/types. e.g. single_protein" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "_page",
              "description": "A number; the page that should be viewed",
              "dataType": "integer",
              "paramType": "query"
            },
            {
              "name": "_pageSize",
              "description": "The desired page size. Set to all to retrieve all results in a single page.",
              "dataType": "integer",
              "paramType": "query"
            },
            {
              "name": "_orderBy",
              "description": "The desired variable to sort by. Multiple values can be specified seperated by spaces. Direction of sort can be specified with ASC(?var) and DESC(?var). Default is ascending",
              "allowableValues": {
                "values": [
                  "?act_comment",
                  "DESC(?act_comment)",
                  "?activity_relation",
                  "DESC(?activity_relation)",
                  "?activity_type",
                  "DESC(?activity_type)",
                  "?activity_unit",
                  "DESC(?activity_unit)",
                  "?activity_value",
                  "DESC(?activity_value)",
                  "?assay_description",
                  "DESC(?assay_description)",
                  "?assay_organism",
                  "DESC(?assay_organism)",
                  "?assay_type",
                  "DESC(?assay_type)",
                  "?assay_uri",
                  "DESC(?assay_uri)",
                  "?chebi_compound",
                  "DESC(?chebi_compound)",
                  "?class",
                  "DESC(?class)",
                  "?compound_chembl",
                  "DESC(?compound_chembl)",
                  "?compound_cw",
                  "DESC(?compound_cw)",
                  "?compound_name",
                  "DESC(?compound_name)",
                  "?compound_ocrs",
                  "DESC(?compound_ocrs)",
                  "?cw_target",
                  "DESC(?cw_target)",
                  "?document",
                  "DESC(?document)",
                  "?doi",
                  "DESC(?doi)",
                  "?inchi",
                  "DESC(?inchi)",
                  "?inchiKey",
                  "DESC(?inchiKey)",
                  "?item",
                  "DESC(?item)",
                  "?molweight",
                  "DESC(?molweight)",
                  "?num_ro5_violations",
                  "DESC(?num_ro5_violations)",
                  "?ops_item",
                  "DESC(?ops_item)",
                  "?pChembl",
                  "DESC(?pChembl)",
                  "?pmid",
                  "DESC(?pmid)",
                  "?protein",
                  "DESC(?protein)",
                  "?protein_name",
                  "DESC(?protein_name)",
                  "?published_relation",
                  "DESC(?published_relation)",
                  "?published_type",
                  "DESC(?published_type)",
                  "?published_unit",
                  "DESC(?published_unit)",
                  "?published_value",
                  "DESC(?published_value)",
                  "?qudt_uri",
                  "DESC(?qudt_uri)",
                  "?smiles",
                  "DESC(?smiles)",
                  "?std_value",
                  "DESC(?std_value)",
                  "?target_name",
                  "DESC(?target_name)",
                  "?target_organism",
                  "DESC(?target_organism)",
                  "?target_type",
                  "DESC(?target_type)",
                  "?target_uri",
                  "DESC(?target_uri)"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_lens",
              "description": "The Lens name",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
"path": "/structure" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Chemical Structure Conversion: Inchi to URL" ,
          "description":  "Returns a ChemSpider URL corresponding to an input InChI string. Driven by ChemSpider.<br><hr><br>Response template: <br><br><hr><br>  &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> foaf:primaryTopic ?primaryTopic </span> .<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> ?primaryTopic foaf:isPrimaryTopicOf </span> .<br> ?primaryTopic <span style=\"BACKGROUND-COLOR: #66FFCC\"> cheminf:CHEMINF_000396 ?inchi </span> .<br> ",
          "group": "ChemSpider structure search" ,
          "parameters": [
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "inchi" ,
              "description":  "An InChI string. E.g. InChI=1S/C9H8O4/c1-6(10)13-8-5-3-2-4-7(8)9(11)12/h2-5H,1H3,(H,11,12)" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
"path": "/structure" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Chemical Structure Conversion: InchiKey to URL" ,
          "description":  "Returns a ChemSpider URL corresponding to an input InChIKey string. Driven by ChemSpider.<br><hr><br>Response template: <br><br><hr><br>  &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> foaf:primaryTopic ?primaryTopic </span> .<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> ?primaryTopic foaf:isPrimaryTopicOf </span> .<br> ?primaryTopic <span style=\"BACKGROUND-COLOR: #66FFCC\"> cheminf:CHEMINF_000399 ?inchi_key </span> .<br> ",
          "group": "ChemSpider structure search" ,
          "parameters": [
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "inchi_key" ,
              "description":  "An InChIKey string. E.g. BSYNRYMUTXBXSQ-UHFFFAOYSA-N" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
"path": "/structure" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Chemical Structure Conversion: SMILES to URL" ,
          "description":  "Returns a ChemSpider URL corresponding to an input SMILES string. Driven by ChemSpider.<br><hr><br>Response template: <br><br><hr><br>  {pageUri} <span style=\"BACKGROUND-COLOR: #66FFCC\"> foaf:primaryTopic ?primaryTopic </span> .<br> ?primaryTopic <span style=\"BACKGROUND-COLOR: #66FFCC\"> foaf:isPrimaryTopicOf {pageUri} </span> .<br> ?primaryTopic <span style=\"BACKGROUND-COLOR: #66FFCC\"> cheminf:CHEMINF_000018 ?smiles </span> .<br> ",
          "group": "ChemSpider structure search" ,
          "parameters": [
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "smiles" ,
              "description":  "A SMILES string. E.g. CC(=O)Oc1ccccc1C(=O)O" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
"path": "/structure/similarity" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Chemical Structure Search: Similarity" ,
          "description":  "Returns a set of ChemSpider compound URLs, similar to the input molecule according to the specified algorithm and threshold. Driven by ChemSpider.<br><hr><br>Response template: <br><br><hr><br>  {pageUri} <span style=\"BACKGROUND-COLOR: #66FFCC\"> foaf:primaryTopic ?primaryTopic </span> .<br> ?primaryTopic <span style=\"BACKGROUND-COLOR: #66FFCC\"> foaf:isPrimaryTopicOf {pageUri} </span> .<br> ?primaryTopic <span style=\"BACKGROUND-COLOR: #66FFCC\"> rdf:type ?searchType </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp; <span style=\"BACKGROUND-COLOR: #66FFCC\"> ops_api_search:Molecule ?moleculeSmiles </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp; <span style=\"BACKGROUND-COLOR: #66FFCC\"> ops_api:result ?result </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp; <span style=\"BACKGROUND-COLOR: #66FFCC\"> ops_api_search:Threshold ?searchThreshold </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp; <span style=\"BACKGROUND-COLOR: #66FFCC\"> ops_api_search:Alpha ?searchAlpha </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp; <span style=\"BACKGROUND-COLOR: #66FFCC\"> ops_api_search:Beta ?searchBeta </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp; <span style=\"BACKGROUND-COLOR: #66FFCC\"> ops_api_search:SimilarityType ?searchSimilarityType </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp; <span style=\"BACKGROUND-COLOR: #66FFCC\"> ops_api_common:Complexity ?complexity </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp; <span style=\"BACKGROUND-COLOR: #66FFCC\"> ops_api_common:Isotopic ?isotopic </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp; <span style=\"BACKGROUND-COLOR: #66FFCC\"> ops_api_common:HasSpectra ?hasSpectra </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp; <span style=\"BACKGROUND-COLOR: #66FFCC\"> ops_api_common:HasPatents ?hasPatents </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp; <span style=\"BACKGROUND-COLOR: #66FFCC\"> ops_api_result:Start ?start </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp; <span style=\"BACKGROUND-COLOR: #66FFCC\"> ops_api_result:Count ?count </span> .<br> ?result <span style=\"BACKGROUND-COLOR: #66FFCC\"> ops_api:relevance ?relevance </span> .<br> ",
          "group": "ChemSpider structure search" ,
          "parameters": [
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name": "searchOptions.Molecule",
              "description":  "A SMILES string. E.g. CC(=O)Oc1ccccc1C(=O)O" ,
              "paramType": "query",
              "required": true,
              "dataType": "string"
            },
            {
              "name": "searchOptions.SimilarityType",
              "description":  "0: Tanimoto ; 1: Tversky ; 2: Euclidian" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "searchOptions.Threshold",
              "description":  "Double <= 1.0" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "searchOptions.Alpha",
              "description":  "Value in [0,1] ; Default=0.5 ; available only for Tversky metric (for the other types it will be ignored) " ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "searchOptions.Beta",
              "description":  "Value in [0,1] ; Default=0.5 ; available only for Tversky metric (for the other types it will be ignored) " ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "commonOptions.Complexity",
              "description":  "(Not supported at the moment) 0: Any ; 1: Single ; 2: Multi" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "commonOptions.Isotopic",
              "description":  "(Not supported at the moment) 0: Any ; 1: Labeled ; 2: NotLabeled" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "commonOptions.HasSpectra",
              "description":  "(Not supported at the moment) Boolean" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "commonOptions.HasPatents",
              "description":  "(Not supported at the moment) Boolean" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "resultOptions.Start",
              "description":  "Integer. Return results starting the index. Default value: 0" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "resultOptions.Count",
              "description":  "Integer. How many results should be returned starting from Start index. Default value: -1." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
"path": "/structure/substructure" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Chemical Structure Search: Substructure" ,
          "description":  "Returns a set of ChemSpider compound URLs that contain the specified structure. Driven by ChemSpider.<br><hr><br>Response template: <br><br><hr><br>  &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> foaf:primaryTopic ?primaryTopic </span> .<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> ?primaryTopic foaf:isPrimaryTopicOf </span> .<br> ?primaryTopic <span style=\"BACKGROUND-COLOR: #66FFCC\"> rdf:type ?searchType </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> ops_api_search:Molecule ?moleculeSmiles </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops_api_search:MolType ?searchMolType </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #A9A9F5\"> ops_api:result ?result </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops_api_search:MatchTautomers ?searchMatchTautomers </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops_api_common:Complexity ?complexity </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops_api_common:Isotopic ?isotopic </span> ;<br> ops_api_common:HasSpectr <span style=\"BACKGROUND-COLOR: #FFFFCC\"> a ?hasSpectra </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops_api_common:HasPatents ?hasPatents </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops_api_result:Start ?start </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops_api_result:Count ?count </span> .<br> ?result <span style=\"BACKGROUND-COLOR: #66FFCC\"> ops_api:relevance ?relevance </span> .<br> ",
          "group": "ChemSpider structure search" ,
          "parameters": [
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name": "searchOptions.Molecule",
              "description":  "A SMILES string. E.g. CC(=O)Oc1ccccc1C(=O)O" ,
              "paramType": "query",
              "required": true,
              "dataType": "string"
            },
            {
              "name": "searchOptions.MatchTautomers",
              "description":  "(Not supported at the moment) Search exactly for the given tautomeric form and ignore others. Not supported at the moment . Boolean" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "searchOptions.MolType",
              "description":  "0: SMILES ; 1: SMARTS" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "commonOptions.Complexity",
              "description":  "(Not supported at the moment) 0: Any ; 1: Single ; 2: Multi" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "commonOptions.Isotopic",
              "description":  "(Not supported at the moment) 0: Any ; 1: Labeled ; 2: NotLabeled" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "commonOptions.HasSpectra",
              "description":  "(Not supported at the moment) Boolean" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "commonOptions.HasPatents",
              "description":  "(Not supported at the moment) Boolean" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "resultOptions.Start",
              "description":  "Integer. Return results starting from this index value. Default value: 0" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "resultOptions.Count",
              "description":  "Integer. How many results should be returned starting from Start index. Default value: -1." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
"path": "/structure/exact" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Chemical Structure Search: Exact" ,
          "description":  "Returns a ChemSpider URL corresponding to an input SMILES string. Driven by ChemSpider.<br><hr><br>Response template: <br><br><hr><br>  {pageUri} <span style=\"BACKGROUND-COLOR: #66FFCC\"> foaf:primaryTopic ?primaryTopic </span> .<br> ?primaryTopic <span style=\"BACKGROUND-COLOR: #66FFCC\"> foaf:isPrimaryTopicOf {pageUri} </span> .<br> ?primaryTopic <span style=\"BACKGROUND-COLOR: #66FFCC\"> rdf:type ?searchType </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp; <span style=\"BACKGROUND-COLOR: #66FFCC\"> ops_api_search:Molecule ?moleculeSmiles </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp; <span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops_api_search:MatchType ?searchMatchType </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp; <span style=\"BACKGROUND-COLOR: #66FFCC\"> ops_api:result ?result </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp; <span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops_api_common:Complexity ?complexity </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp; <span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops_api_common:Isotopic ?isotopic </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp; <span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops_api_common:HasSpectra ?hasSpectra </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp; <span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops_api_common:HasPatents ?hasPatents </span> .<br> ",
          "group": "ChemSpider structure search" ,
          "parameters": [
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name": "searchOptions.Molecule",
              "description":  "A SMILES string. E.g. CNC(=O)c1cc(ccn1)Oc2ccc(cc2)NC(=O)Nc3ccc(c(c3)C(F)(F)F)Cl" ,
              "paramType": "query",
              "required": true,
              "dataType": "string"
            },
            {
              "name": "searchOptions.MatchType",
              "description":  "0: ExactMatch ; 1: AllTautomers ; 2: SameSkeletonIncludingH ; 3: SameSkeletonExcludingH ; 4: AllIsomers" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "commonOptions.Complexity",
              "description":  "(Not supported at the moment) 0: Any ; 1: Single ; 2: Multi" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "commonOptions.Isotopic",
              "description":  "(Not supported at the moment) 0: Any ; 1: Labeled ; 2: NotLabeled" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "commonOptions.HasSpectra",
              "description":  "(Not supported at the moment) Boolean" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "commonOptions.HasPatents",
              "description":  "(Not supported at the moment) Boolean" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
"path": "/target" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Target Information" ,
          "description":  "Returns information about a single target that corresponds to {uri}.<br><hr><br>Response template: <br><br><hr><br>  ?ops_item <span style=\"BACKGROUND-COLOR: #FFFFCC\"> skos:exactMatch ?cw_target_uri </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> skos:exactMatch ?uniprot_target_uri </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> skos:exactMatch ?chembl_target_uri </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> skos:exactMatch ?db_target_uri </span> .<br> ?cw_target_uri <span style=\"BACKGROUND-COLOR: #FFFFCC\"> skos:prefLabel ?target_name </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> void:inDataset &lt;http://www.conceptwiki.org&gt; </span> .<br> ?uniprot_target_uri <span style=\"BACKGROUND-COLOR: #FFFFCC\"> uniprot:existence ?existence </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> uniprot:organism ?organism </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> uniprot:sequence ?sequence </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> uniprot:Function_Annotation ?function </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops:interactsWith ?inter_prot </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFCC99\"> uniprot:classifiedWith ?class </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> uniprot:alternativeName ?alt_name </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> uniprot:mass ?mass </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops:molecularWeight ?mass </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFCC99\"> rdfs:seeAlso ?target_pdb </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFCC99\"> rdfs:seeAlso ?ppi </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> void:inDataset &lt;http://purl.uniprot.org&gt; </span> .<br> ?inter_prot <span style=\"BACKGROUND-COLOR: #FFFFCC\"> rdfs:label ?inter_label </span> .<br> ?chembl_target_uri <span style=\"BACKGROUND-COLOR: #FFCC99\"> chembl:hasTargetComponent ?target_component </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> a ?target_type </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> rdfs:label ?synonym </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> void:inDataset &lt;http://www.ebi.ac.uk/chembl&gt; </span> .<br> ?target_component <span style=\"BACKGROUND-COLOR: #FFFFCC\"> dcterms:description ?description </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> skos:exactMatch ?cw_target </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> void:inDataset &lt;http://www.ebi.ac.uk/chembl&gt; </span> .<br> ?cw_target <span style=\"BACKGROUND-COLOR: #FFFFCC\"> skos:prefLabel ?protein_name </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> void:inDataset &lt;http://www.conceptwiki.org&gt; </span> .<br> ?db_target_uri <span style=\"BACKGROUND-COLOR: #FFFFCC\"> drugbank:cellularLocation ?cellularLocation </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> drugbank:molecularWeight ?molecularWeight </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> drugbank:numberOfResidues ?numberOfResidues </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> drugbank:theoreticalPi ?theoreticalPi </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> void:inDataset &lt;http://linkedlifedata.com/resource/drugbank&gt; </span> .<br> ",
          "group": "Target" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "A target URI. e.g.: http://www.conceptwiki.org/concept/00059958-a045-4581-9dc5-e5a08bb0c291" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name": "_lens",
              "description": "The Lens name",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
"path": "/target/members/count" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Target Class Members: Count" ,
          "description":  "The number of targets classified with the given class in the supported hierarchies. Currently supported hierarchies are the Enzyme Classification, the ChEMBL Target Tree and the Gene Ontology.<br><hr><br>Response template: <br><br><hr><br>  ?ops_item <span style=\"BACKGROUND-COLOR: #66FFCC\"> ops:memberCount ?count </span> .<br> ",
          "group": "Target" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "A class URI from one of the supported hierarchies. e.g.: http://purl.uniprot.org/enzyme/6.2.-.-" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "target_organism" ,
              "description":  "A literal organism in ChEMBL." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "target_organism_uri" ,
              "description":  "An organism URI from Uniprot. e.g. http://purl.uniprot.org/taxonomy/386043" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "_lens",
              "description": "The Lens name",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
"path": "/target/members/pages" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Target Class Members: List" ,
          "description":  "A list of targets classified with the given class in the supported hierarchies. Currently supported hierarchies are the Enzyme Classification, the ChEMBL Target Tree and the Gene Ontology.<br><hr><br>Response template: <br><br><hr><br>  ?item <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:prefLabel ?chembl_name </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:targetOrganismName ?chembl_organism </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:prefLabel ?uniprot_name </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:prefLabel ?goa_name </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> rdf:type ?target_type </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> uniprot:organism ?uniprot_organism </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset ?dataset </span> .<br> ",
          "group": "Target" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "A class URI from one of the supported hierarchies. e.g.: http://purl.uniprot.org/enzyme/6.2.-.-" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "target_organism" ,
              "description":  "A literal organism in ChEMBL." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "target_organism_uri" ,
              "description":  "An organism URI from Uniprot. e.g. http://purl.uniprot.org/taxonomy/386043" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "_page",
              "description": "A number; the page that should be viewed",
              "dataType": "integer",
              "paramType": "query"
            },
            {
              "name": "_pageSize",
              "description": "The desired page size. Set to all to retrieve all results in a single page.",
              "dataType": "integer",
              "paramType": "query"
            },
            {
              "name": "_orderBy",
              "description": "The desired variable to sort by. Multiple values can be specified seperated by spaces. Direction of sort can be specified with ASC(?var) and DESC(?var). Default is ascending",
              "allowableValues": {
                "values": [
                  "?chembl_name",
                  "DESC(?chembl_name)",
                  "?chembl_organism",
                  "DESC(?chembl_organism)",
                  "?child_node",
                  "DESC(?child_node)",
                  "?dataset",
                  "DESC(?dataset)",
                  "?g",
                  "DESC(?g)",
                  "?g_short",
                  "DESC(?g_short)",
                  "?goa_name",
                  "DESC(?goa_name)",
                  "?item",
                  "DESC(?item)",
                  "?ops_item",
                  "DESC(?ops_item)",
                  "?target_type",
                  "DESC(?target_type)",
                  "?uniprot_name",
                  "DESC(?uniprot_name)",
                  "?uniprot_organism",
                  "DESC(?uniprot_organism)"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_lens",
              "description": "The Lens name",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
"path": "/target/classifications" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Target Classifications" ,
          "description":  "The classes the given target URI has been classified with. Currently supported hierarchies are the Enzyme Classification, the ChEMBL Target Tree and the Gene Ontology. <br><hr><br>Response template: <br><br><hr><br>  ?ops_item <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:exactMatch ?chembl_target_uri </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:exactMatch ?uniprot_target_uri </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:exactMatch ?cw_target_uri </span> .<br> ?chembl_target_uri <span style=\"BACKGROUND-COLOR: #A9A9F5\"> chembl:hasProteinClassification ?chembl_class </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> dcterms:title ?target_name </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> a ?target_type </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #A9A9F5\"> ops:hasEnzymeClassification ?enzyme_class </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://www.ebi.ac.uk/chembl&gt; </span> .<br> ?uniprot_target_uri <span style=\"BACKGROUND-COLOR: #66FFCC\"> ops:hasGoComponent ?go_component </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> ops:hasGoFunction ?go_function </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> ops:hasGoProcess ?go_process </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://www.openphacts.org/goa&gt; </span> .<br> ?cw_target_uri <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:prefLabel ?cw_label </span> .<br> ?chembl_class <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:prefLabel ?chembl_label </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://www.ebi.ac.uk/chembl&gt; </span> .<br> ?enzyme_class <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:prefLabel ?enzyme_label </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://purl.uniprot.org/enzyme&gt; </span> .<br> ?go_component <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:prefLabel ?go_c_label </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://www.geneontology.org&gt; </span> .<br> ?go_function <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:prefLabel ?go_f_label </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://www.geneontology.org&gt; </span> .<br> ?go_process <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:prefLabel ?go_p_label </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://www.geneontology.org&gt; </span> .<br> &lt;http://purl.uniprot.org/enzyme&gt; <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:prefLabel 'Enzyme Classification' </span> .<br> &lt;http://www.ebi.ac.uk/chembl/target&gt; <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:prefLabel 'ChEMBL Target Hierarchy' </span> .<br> &lt;http://www.geneontology.org&gt; <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:prefLabel 'GeneOntology' </span> .<br> ",
          "group": "Target" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "A target URI.  e.g.: http://purl.uniprot.org/uniprot/P14756" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "tree" ,
              "description":  "Restrict results by hierarchy. Currently one of 'chembl', 'enzyme', 'go'" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "target_type" ,
              "description":  "One of the types listed at /target/types. e.g. single_protein" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "_lens",
              "description": "The Lens name",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
"path": "/target/classificationsForCompounds" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Classification of Compounds for Target" ,
          "description":  "The hierarchy classes for the different Compounds that interact with a given Target. Currently only the ChEBI Ontology is supported. <br><hr><br>Response template: <br><br><hr><br>  ?ops_item <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:exactMatch ?chembl_target_uri </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:exactMatch ?cw_target_uri </span> .<br> ?chembl_target_uri <span style=\"BACKGROUND-COLOR: #A9A9F5\"> ops:interactsWithMoleculeOfClass ?chebi_class </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFCC99\"> ops:interactsWithMoleculeOfClass ?chebi_other_class </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://www.ebi.ac.uk/chembl&gt; </span> .<br> ?cw_target_uri <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:prefLabel ?cw_label </span> .<br> ?chebi_class <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:prefLabel ?chebi_label </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://www.ebi.ac.uk/chebi&gt; </span> .<br> ?chebi_other_class <span style=\"BACKGROUND-COLOR: #FFFFCC\"> skos:prefLabel ?chebi_other_label </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops:classificationType ?chebi_class_type </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://www.ebi.ac.uk/chebi&gt; </span> .<br> ?chebi_class_type <span style=\"BACKGROUND-COLOR: #FFFFCC\"> skos:prefLabel ?chebi_class_type_label </span> .<br> &lt;http://www.ebi.ac.uk/chebi&gt; <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:prefLabel 'ChEBI Ontology' </span> .<br> ",
          "group": "Target" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "A target URI.  e.g.: http://purl.uniprot.org/uniprot/P00918" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "assay_organism" ,
              "description":  "A literal organism in ChEMBL." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "target_organism" ,
              "description":  "A literal target organism in ChEMBL." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "activity_type" ,
              "description":  "One of the activity types listed at /pharmacology/filters/activities" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "activity_value" ,
              "description":  "Return activity values equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "min-activity_value" ,
              "description":  "Return activity values greater than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "minEx-activity_value" ,
              "description":  "Return activity values greater than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "max-activity_value" ,
              "description":  "Return activity values less than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "maxEx-activity_value" ,
              "description":  "Return activity values less than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "activity_unit" ,
              "description":  "The unit in which {activity_value} is given. See /pharmacology/filters/units/{activity_type} for allowed valued. For e.g. IC50: /pharmacology/filters/units/IC50" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "activity_relation" ,
              "description":  ">, >=,= , < , <=" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "assay_organism" ,
              "description":  "A literal organism in ChEMBL." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "pChembl" ,
              "description":  "Return activities with a pChembl value equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "min-pChembl" ,
              "description":  "Return activities with a pChembl value greater than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "minEx-pChembl" ,
              "description":  "Return activities with a pChembl value greater than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "max-pChembl" ,
              "description":  "Return activities with a pChembl value less than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "maxEx-pChembl" ,
              "description":  "Return activities with a pChembl value less than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name": "_lens",
              "description": "The Lens name",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
"path": "/target/pharmacology/count" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Target Pharmacology: Count" ,
          "description":  "The total number of acitivity values in the LDC for a given target<br><hr><br>Response template: <br><br><hr><br>  ?ops_item <span style=\"BACKGROUND-COLOR: #66FFCC\"> ops:targetPharmacologyTotalResults ?count </span> .<br> ",
          "group": "Target" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "A target URI. e.g.: http://www.conceptwiki.org/concept/00059958-a045-4581-9dc5-e5a08bb0c291" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "target_organism" ,
              "description":  "A literal target organism in ChEMBL." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "activity_type" ,
              "description":  "One of the activity types listed at /pharmacology/filters/activities" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "activity_value" ,
              "description":  "Return activity values equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "min-activity_value" ,
              "description":  "Return activity values greater than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "minEx-activity_value" ,
              "description":  "Return activity values greater than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "max-activity_value" ,
              "description":  "Return activity values less than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "maxEx-activity_value" ,
              "description":  "Return activity values less than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "activity_unit" ,
              "description":  "The unit in which {activity_value} is given. See /pharmacology/filters/units/{activity_type} for allowed valued. For e.g. IC50: /pharmacology/filters/units/IC50" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "activity_relation" ,
              "description":  ">, >=,= , < , <=" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "assay_organism" ,
              "description":  "A literal assay organism in ChEMBL." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "pChembl" ,
              "description":  "Return activities with a pChembl value equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "min-pChembl" ,
              "description":  "Return activities with a pChembl value greater than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "minEx-pChembl" ,
              "description":  "Return activities with a pChembl value greater than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "max-pChembl" ,
              "description":  "Return activities with a pChembl value less than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "maxEx-pChembl" ,
              "description":  "Return activities with a pChembl value less than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "target_type" ,
              "description":  "One of the types listed at /target/types. e.g. single_protein" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "_lens",
              "description": "The Lens name",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
"path": "/target/pharmacology/pages" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Target Pharmacology: List" ,
          "description":  "A page of items corresponding to acitivity values in the LDC for a given target<br><hr><br>Response template: <br><br><hr><br>  ?item <span style=\"BACKGROUND-COLOR: #66FFCC\"> chembl:hasMolecule ?compound_chembl </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:publishedType ?published_type </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:publishedRelation ?published_relation </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:publishedValue ?published_value </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:publishedUnits ?published_unit </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:standardType ?activity_type </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:standardRelation ?activity_relation </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:standardValue ?activity_value </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:hasQUDT ?qudt_uri </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> chembl:hasAssay ?assay_uri </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:assayTestType ?assay_type </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:pChembl ?pChembl </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:activityComment ?act_comment </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFCC99\"> bibo:pmid ?pmid </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFCC99\"> chembl:hasDocument ?doi </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://www.ebi.ac.uk/chembl&gt; </span> .<br> ?qudt_uri <span style=\"BACKGROUND-COLOR: #FFFFCC\"> skos:prefLabel ?activity_unit </span> .<br> ?assay_uri <span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:assayOrganismName ?assay_organism </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> chembl:hasTarget ?chembl_target_uri </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> dcterms:description ?assay_description </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://www.ebi.ac.uk/chembl&gt; </span> .<br> ?chembl_target_uri <span style=\"BACKGROUND-COLOR: #FFFFCC\"> dcterms:title ?target_name_chembl </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:targetOrganismName ?target_organism </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFCC99\"> chembl:hasTargetComponent ?protein </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> a ?target_type </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://www.ebi.ac.uk/chembl&gt; </span> .<br> ?protein <span style=\"BACKGROUND-COLOR: #FFFFCC\"> skos:exactMatch ?cw_target </span> .<br> ?cw_target <span style=\"BACKGROUND-COLOR: #FFFFCC\"> skos:prefLabel ?protein_name </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://www.conceptwiki.org&gt; </span> .<br> ?compound_chembl <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:exactMatch ?compound_ocrs </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:exactMatch ?compound_cw </span> .<br> ?compound_ocrs <span style=\"BACKGROUND-COLOR: #66FFCC\"> ops:smiles ?smiles </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> ops:inchi ?inchi </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> ops:inchikey ?inchi_key </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops:molweight ?molweight </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops:ro5_violations ?num_ro5_violations </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://ops.rsc.org&gt; </span> .<br> ?compound_cw <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:prefLabel ?compound_name </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://www.conceptwiki.org&gt; </span> .<br> ",
          "group": "Target" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "A target URI. e.g.: http://www.conceptwiki.org/concept/00059958-a045-4581-9dc5-e5a08bb0c291" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "assay_organism" ,
              "description":  "A literal organism in ChEMBL." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "target_organism" ,
              "description":  "A literal target organism in ChEMBL." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "target_organism" ,
              "description":  "A literal target organism in ChEMBL." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "activity_type" ,
              "description":  "One of the activity types listed at /pharmacology/filters/activities" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "activity_value" ,
              "description":  "Return activity values equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "min-activity_value" ,
              "description":  "Return activity values greater than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "minEx-activity_value" ,
              "description":  "Return activity values greater than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "max-activity_value" ,
              "description":  "Return activity values less than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "maxEx-activity_value" ,
              "description":  "Return activity values less than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "activity_unit" ,
              "description":  "The unit in which {activity_value} is given. See /pharmacology/filters/units/{activity_type} for allowed valued. For e.g. IC50: /pharmacology/filters/units/IC50" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "activity_relation" ,
              "description":  ">, >=,= , < , <=" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "assay_organism" ,
              "description":  "A literal organism in ChEMBL." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "pChembl" ,
              "description":  "Return activities with a pChembl value equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "min-pChembl" ,
              "description":  "Return activities with a pChembl value greater than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "minEx-pChembl" ,
              "description":  "Return activities with a pChembl value greater than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "max-pChembl" ,
              "description":  "Return activities with a pChembl value less than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "maxEx-pChembl" ,
              "description":  "Return activities with a pChembl value less than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "target_type" ,
              "description":  "One of the types listed at /target/types. e.g. single_protein" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "_page",
              "description": "A number; the page that should be viewed",
              "dataType": "integer",
              "paramType": "query"
            },
            {
              "name": "_pageSize",
              "description": "The desired page size. Set to all to retrieve all results in a single page.",
              "dataType": "integer",
              "paramType": "query"
            },
            {
              "name": "_orderBy",
              "description": "The desired variable to sort by. Multiple values can be specified seperated by spaces. Direction of sort can be specified with ASC(?var) and DESC(?var). Default is ascending",
              "allowableValues": {
                "values": [
                  "?act_comment",
                  "DESC(?act_comment)",
                  "?activity_relation",
                  "DESC(?activity_relation)",
                  "?activity_type",
                  "DESC(?activity_type)",
                  "?activity_unit",
                  "DESC(?activity_unit)",
                  "?activity_value",
                  "DESC(?activity_value)",
                  "?assay_description",
                  "DESC(?assay_description)",
                  "?assay_organism",
                  "DESC(?assay_organism)",
                  "?assay_type",
                  "DESC(?assay_type)",
                  "?assay_uri",
                  "DESC(?assay_uri)",
                  "?chembl_target_uri",
                  "DESC(?chembl_target_uri)",
                  "?compound_chembl",
                  "DESC(?compound_chembl)",
                  "?compound_cw",
                  "DESC(?compound_cw)",
                  "?compound_name",
                  "DESC(?compound_name)",
                  "?compound_ocrs",
                  "DESC(?compound_ocrs)",
                  "?cw_target",
                  "DESC(?cw_target)",
                  "?doc_uri",
                  "DESC(?doc_uri)",
                  "?doi",
                  "DESC(?doi)",
                  "?inchi",
                  "DESC(?inchi)",
                  "?inchi_key",
                  "DESC(?inchi_key)",
                  "?item",
                  "DESC(?item)",
                  "?molweight",
                  "DESC(?molweight)",
                  "?num_ro5_violations",
                  "DESC(?num_ro5_violations)",
                  "?pChembl",
                  "DESC(?pChembl)",
                  "?pmid",
                  "DESC(?pmid)",
                  "?protein",
                  "DESC(?protein)",
                  "?protein_name",
                  "DESC(?protein_name)",
                  "?published_relation",
                  "DESC(?published_relation)",
                  "?published_type",
                  "DESC(?published_type)",
                  "?published_unit",
                  "DESC(?published_unit)",
                  "?published_value",
                  "DESC(?published_value)",
                  "?qudt_uri",
                  "DESC(?qudt_uri)",
                  "?smiles",
                  "DESC(?smiles)",
                  "?standard_value",
                  "DESC(?standard_value)",
                  "?target_name_chembl",
                  "DESC(?target_name_chembl)",
                  "?target_organism",
                  "DESC(?target_organism)",
                  "?target_type",
                  "DESC(?target_type)"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_lens",
              "description": "The Lens name",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
"path": "/target/tree/pharmacology/count" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Target Class Pharmacology: Count" ,
          "description":  "The total number of  acitivity values in the LDC for targets classified with the given class in the supported hierarchies. Currently supported hierarchies are the Enzyme Classification, the ChEMBL Target Tree and the Gene Ontology.<br><hr><br>Response template: <br><br><hr><br>  ?ops_item <span style=\"BACKGROUND-COLOR: #66FFCC\"> ops:targetPharmacologyTotalResults ?count </span> .<br> ",
          "group": "Target" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "A class URI from one of the supported hierarchies. e.g.: http://purl.uniprot.org/enzyme/6.2.-.-" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "assay_organism" ,
              "description":  "A literal organism in ChEMBL." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "target_organism" ,
              "description":  "A literal target organism in ChEMBL." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "activity_type" ,
              "description":  "One of the activity types listed at /pharmacology/filters/activities" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "activity_value" ,
              "description":  "Return activity values equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "min-activity_value" ,
              "description":  "Return activity values greater than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "minEx-activity_value" ,
              "description":  "Return activity values greater than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "max-activity_value" ,
              "description":  "Return activity values less than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "maxEx-activity_value" ,
              "description":  "Return activity values less than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "activity_unit" ,
              "description":  "The unit in which {activity_value} is given. See /pharmacology/filters/units/{activity_type} for allowed valued. For e.g. IC50: /pharmacology/filters/units/IC50" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "activity_relation" ,
              "description":  ">, >=,= , < , <=" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "assay_organism" ,
              "description":  "A literal organism in ChEMBL." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "pChembl" ,
              "description":  "Return activities with a pChembl value equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "min-pChembl" ,
              "description":  "Return activities with a pChembl value greater than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "minEx-pChembl" ,
              "description":  "Return activities with a pChembl value greater than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "max-pChembl" ,
              "description":  "Return activities with a pChembl value less than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "maxEx-pChembl" ,
              "description":  "Return activities with a pChembl value less than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "target_type" ,
              "description":  "One of the types listed at /target/types. e.g. single_protein" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "_lens",
              "description": "The Lens name",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
"path": "/target/tree/pharmacology/pages" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Target Class Pharmacology: List " ,
          "description":  "A page of items corresponding to acitivity values in the LDC for targets classified with the given class in the supported hierarchies. Currently supported hierarchies are the Enzyme Classification, the ChEMBL Target Tree and the Gene Ontology.<br><hr><br>Response template: <br><br><hr><br>  ?item <span style=\"BACKGROUND-COLOR: #66FFCC\"> chembl:hasMolecule ?compound_chembl </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:publishedType ?published_type </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:publishedRelation ?published_relation </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:publishedValue ?published_value </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:publishedUnits ?published_unit </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:standardType ?activity_type </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:standardRelation ?activity_relation </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:standardValue ?activity_value </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:hasQUDT ?qudt_uri </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> chembl:hasAssay ?assay_uri </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:pChembl ?pChembl </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:activityComment ?act_comment </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFCC99\"> chembl:hasDocument ?doi </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFCC99\"> bibo:pmid ?pmid </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://www.ebi.ac.uk/chembl&gt; </span> .<br> ?qudt_uri <span style=\"BACKGROUND-COLOR: #FFFFCC\"> skos:prefLabel ?activity_unit </span> .<br> ?assay_uri <span style=\"BACKGROUND-COLOR: #66FFCC\"> chembl:hasTarget ?target_chembl </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:assayTestType ?assay_type </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> dcterms:description ?assay_description </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:assayOrganismName ?assay_organism </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://www.ebi.ac.uk/chembl&gt; </span> .<br> ?target_chembl <span style=\"BACKGROUND-COLOR: #FFFFCC\"> dcterms:title ?target_name </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:targetOrganismName ?target_organism </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #A9A9F5\"> ops:classifiedUnder ?class </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFCC99\"> chembl:hasTargetComponent ?protein </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> a ?target_type </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://www.ebi.ac.uk/chembl&gt; </span> .<br> ?compound_chembl <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:exactMatch ?compound_ocrs </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:exactMatch ?compound_cw </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://www.ebi.ac.uk/chembl&gt; </span> .<br> ?compound_ocrs <span style=\"BACKGROUND-COLOR: #66FFCC\"> ops:smiles ?smiles </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> ops:inchi ?inchi </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> ops:inchikey ?inchi_key </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops:molweight ?molweight </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops:ro5_violations ?num_ro5_violations </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://ops.rsc.org&gt; </span> .<br> ?protein <span style=\"BACKGROUND-COLOR: #FFFFCC\"> skos:exactMatch ?cw_target </span> .<br> ?cw_target <span style=\"BACKGROUND-COLOR: #FFFFCC\"> skos:prefLabel ?protein_name </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://www.conceptwiki.org&gt; </span> .<br> ?compound_cw <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:prefLabel ?compound_name </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://www.conceptwiki.org&gt; </span> .<br> ",
          "group": "Target" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "A class URI from one of the supported hierarchies. e.g.: http://purl.uniprot.org/enzyme/6.2.-.-" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "assay_organism" ,
              "description":  "A literal organism in ChEMBL." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "target_organism" ,
              "description":  "A literal target organism in ChEMBL." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "activity_type" ,
              "description":  "One of the activity types listed at /pharmacology/filters/activities" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "activity_value" ,
              "description":  "Return activity values equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "min-activity_value" ,
              "description":  "Return activity values greater than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "minEx-activity_value" ,
              "description":  "Return activity values greater than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "max-activity_value" ,
              "description":  "Return activity values less than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "maxEx-activity_value" ,
              "description":  "Return activity values less than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "activity_unit" ,
              "description":  "The unit in which {activity_value} is given. See /pharmacology/filters/units/{activity_type} for allowed valued. For e.g. IC50: /pharmacology/filters/units/IC50" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "activity_relation" ,
              "description":  ">, >=,= , < , <=" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "assay_organism" ,
              "description":  "A literal organism in ChEMBL." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "pChembl" ,
              "description":  "Return activities with a pChembl value equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "min-pChembl" ,
              "description":  "Return activities with a pChembl value greater than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "minEx-pChembl" ,
              "description":  "Return activities with a pChembl value greater than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "max-pChembl" ,
              "description":  "Return activities with a pChembl value less than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "maxEx-pChembl" ,
              "description":  "Return activities with a pChembl value less than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "target_type" ,
              "description":  "One of the types listed at /target/types. e.g. single_protein" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "_page",
              "description": "A number; the page that should be viewed",
              "dataType": "integer",
              "paramType": "query"
            },
            {
              "name": "_pageSize",
              "description": "The desired page size. Set to all to retrieve all results in a single page.",
              "dataType": "integer",
              "paramType": "query"
            },
            {
              "name": "_orderBy",
              "description": "The desired variable to sort by. Multiple values can be specified seperated by spaces. Direction of sort can be specified with ASC(?var) and DESC(?var). Default is ascending",
              "allowableValues": {
                "values": [
                  "?act_comment",
                  "DESC(?act_comment)",
                  "?activity_relation",
                  "DESC(?activity_relation)",
                  "?activity_type",
                  "DESC(?activity_type)",
                  "?activity_unit",
                  "DESC(?activity_unit)",
                  "?activity_value",
                  "DESC(?activity_value)",
                  "?assay_description",
                  "DESC(?assay_description)",
                  "?assay_organism",
                  "DESC(?assay_organism)",
                  "?assay_type",
                  "DESC(?assay_type)",
                  "?assay_uri",
                  "DESC(?assay_uri)",
                  "?class",
                  "DESC(?class)",
                  "?compound_chembl",
                  "DESC(?compound_chembl)",
                  "?compound_cw",
                  "DESC(?compound_cw)",
                  "?compound_name",
                  "DESC(?compound_name)",
                  "?compound_ocrs",
                  "DESC(?compound_ocrs)",
                  "?cw_target",
                  "DESC(?cw_target)",
                  "?document",
                  "DESC(?document)",
                  "?doi",
                  "DESC(?doi)",
                  "?g",
                  "DESC(?g)",
                  "?inchi",
                  "DESC(?inchi)",
                  "?inchi_key",
                  "DESC(?inchi_key)",
                  "?item",
                  "DESC(?item)",
                  "?molweight",
                  "DESC(?molweight)",
                  "?num_ro5_violations",
                  "DESC(?num_ro5_violations)",
                  "?ops_item",
                  "DESC(?ops_item)",
                  "?pChembl",
                  "DESC(?pChembl)",
                  "?pmid",
                  "DESC(?pmid)",
                  "?protein",
                  "DESC(?protein)",
                  "?protein_name",
                  "DESC(?protein_name)",
                  "?published_relation",
                  "DESC(?published_relation)",
                  "?published_type",
                  "DESC(?published_type)",
                  "?published_unit",
                  "DESC(?published_unit)",
                  "?published_value",
                  "DESC(?published_value)",
                  "?qudt_uri",
                  "DESC(?qudt_uri)",
                  "?smiles",
                  "DESC(?smiles)",
                  "?std_value",
                  "DESC(?std_value)",
                  "?target_chembl",
                  "DESC(?target_chembl)",
                  "?target_component",
                  "DESC(?target_component)",
                  "?target_name",
                  "DESC(?target_name)",
                  "?target_organism",
                  "DESC(?target_organism)",
                  "?target_type",
                  "DESC(?target_type)",
                  "?uniprot",
                  "DESC(?uniprot)"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_lens",
              "description": "The Lens name",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
"path": "/target/types" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Target Types" ,
          "description":  "A list of target types in the LDC.<br><hr><br>Response template: <br><br><hr><br>  &lt;http://www.ebi.ac.uk/chembl&gt; <span style=\"BACKGROUND-COLOR: #A9A9F5\"> ops:hasTargetType ?target_type </span> .<br> ?target_type <span style=\"BACKGROUND-COLOR: #66FFCC\"> ops:targetCount ?target_count </span> .<br> &lt;http://rdf.ebi.ac.uk/terms/chembl#SingleProtein&gt; <span style=\"BACKGROUND-COLOR: #66FFCC\"> rdfs:label 'single_protein' </span> .<br> &lt;http://rdf.ebi.ac.uk/terms/chembl#ProteinComplexGroup&gt; <span style=\"BACKGROUND-COLOR: #66FFCC\"> rdfs:label 'protein_complex_group' </span> .<br> &lt;http://rdf.ebi.ac.uk/terms/chembl#ProteinFamily&gt; <span style=\"BACKGROUND-COLOR: #66FFCC\"> rdfs:label 'protein_family' </span> .<br> &lt;http://rdf.ebi.ac.uk/terms/chembl#ProteinSelectivityGroup&gt; <span style=\"BACKGROUND-COLOR: #66FFCC\"> rdfs:label 'protein_selectivity_group' </span> .<br> &lt;http://rdf.ebi.ac.uk/terms/chembl#ProteinComplex&gt; <span style=\"BACKGROUND-COLOR: #66FFCC\"> rdfs:label 'protein_complex' </span> .<br> &lt;http://rdf.ebi.ac.uk/terms/chembl#Organism&gt; <span style=\"BACKGROUND-COLOR: #66FFCC\"> rdfs:label 'organism' </span> .<br> &lt;http://rdf.ebi.ac.uk/terms/chembl#CellLine&gt; <span style=\"BACKGROUND-COLOR: #66FFCC\"> rdfs:label 'cell_line' </span> .<br> &lt;http://rdf.ebi.ac.uk/terms/chembl#Tissue&gt; <span style=\"BACKGROUND-COLOR: #66FFCC\"> rdfs:label 'tissue' </span> .<br> &lt;http://rdf.ebi.ac.uk/terms/chembl#ProteinProteinInteraction&gt; <span style=\"BACKGROUND-COLOR: #66FFCC\"> rdfs:label 'ppi' </span> .<br> &lt;http://rdf.ebi.ac.uk/terms/chembl#UnknownTarget&gt; <span style=\"BACKGROUND-COLOR: #66FFCC\"> rdfs:label 'unknown' </span> .<br> &lt;http://rdf.ebi.ac.uk/terms/chembl#NucleicAcid&gt; <span style=\"BACKGROUND-COLOR: #66FFCC\"> rdfs:label 'nucleic_acid' </span> .<br> &lt;http://rdf.ebi.ac.uk/terms/chembl#SubCellular&gt; <span style=\"BACKGROUND-COLOR: #66FFCC\"> rdfs:label 'sub_cellular' </span> .<br> &lt;http://rdf.ebi.ac.uk/terms/chembl#UnclassifiedTarget&gt; <span style=\"BACKGROUND-COLOR: #66FFCC\"> rdfs:label 'unclassified' </span> .<br> &lt;http://rdf.ebi.ac.uk/terms/chembl#ADMET&gt; <span style=\"BACKGROUND-COLOR: #66FFCC\"> rdfs:label 'admet' </span> .<br> &lt;http://rdf.ebi.ac.uk/terms/chembl#ChimericProtein&gt; <span style=\"BACKGROUND-COLOR: #66FFCC\"> rdfs:label 'chimeric_protein' </span> .<br> &lt;http://rdf.ebi.ac.uk/terms/chembl#Phenotype&gt; <span style=\"BACKGROUND-COLOR: #66FFCC\"> rdfs:label 'phenotype' </span> .<br> ",
          "group": "Target" ,
          "parameters": [
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name": "_lens",
              "description": "The Lens name",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
"path": "/pharmacology/filters/activities/count" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Activity Types: Count" ,
          "description":  "The number of activity types which have been normalised<br><hr><br>Response template: <br><br><hr><br>  &lt;http://www.ebi.ac.uk/chembl&gt; <span style=\"BACKGROUND-COLOR: #66FFCC\"> ops:activity_type_count ?coun </span> t<br> ",
          "group": "Pharmacology Filters" ,
          "parameters": [
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "activity_unit" ,
              "description":  "The unit in which {activity_value} is given. See /pharmacology/filters/units for allowed values. For e.g. IC50: /pharmacology/filters/units/IC50" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "_lens",
              "description": "The Lens name",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
"path": "/pharmacology/filters/activities" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Activity Types: List" ,
          "description":  "A list of activity types which have been normalised<br><hr><br>Response template: <br><br><hr><br>  &lt;http://www.ebi.ac.uk/chembl&gt; <span style=\"BACKGROUND-COLOR: #A9A9F5\"> ops:normalised_activity_type ?item </span> .<br> ?item <span style=\"BACKGROUND-COLOR: #66FFCC\"> rdfs:label ?type_label </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp; <span style=\"BACKGROUND-COLOR: #66FFCC\"> ops:activity_count ?count </span> .<br> ",
          "group": "Pharmacology Filters" ,
          "parameters": [
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "activity_unit" ,
              "description":  "The unit in which {activity_value} is given. See /pharmacology/filters/units/{activity_type} for allowed valued. For e.g. IC50: /pharmacology/filters/units/IC50" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "_page",
              "description": "A number; the page that should be viewed",
              "dataType": "integer",
              "paramType": "query"
            },
            {
              "name": "_pageSize",
              "description": "The desired page size. Set to all to retrieve all results in a single page.",
              "dataType": "integer",
              "paramType": "query"
            },
            {
              "name": "_orderBy",
              "description": "The desired variable to sort by. Multiple values can be specified seperated by spaces. Direction of sort can be specified with ASC(?var) and DESC(?var). Default is ascending",
              "allowableValues": {
                "values": [
                  "?activity",
                  "DESC(?activity)",
                  "?count",
                  "DESC(?count)",
                  "?item",
                  "DESC(?item)",
                  "?standard_type",
                  "DESC(?standard_type)",
                  "?type_label",
                  "DESC(?type_label)"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_lens",
              "description": "The Lens name",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
"path": "/pharmacology/filters/count_units" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Activity Units: Count" ,
          "description":  "A list of activity units which have been normalised<br><hr><br>Response template: <br><br><hr><br>  &lt;http://www.ebi.ac.uk/chembl&gt; <span style=\"BACKGROUND-COLOR: #66FFCC\"> ops:normalised_activity_unit_count ?count </span> .<br> ",
          "group": "Pharmacology Filters" ,
          "parameters": [
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "activity_type" ,
              "description":  "One of the activity types listed at /pharmacology/filters/activities" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "_lens",
              "description": "The Lens name",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
"path": "/pharmacology/filters/units" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Activity Units: List" ,
          "description":  "A list of activity units which have been normalised<br><hr><br>Response template: <br><br><hr><br>  &lt;http://www.ebi.ac.uk/chembl&gt; <span style=\"BACKGROUND-COLOR: #A9A9F5\"> ops:normalised_activity_unit ?item </span> .<br> ?item <span style=\"BACKGROUND-COLOR: #66FFCC\"> rdfs:label ?qudt_label </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> ops:activity_count ?count </span> .<br> ",
          "group": "Pharmacology Filters" ,
          "parameters": [
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name": "_page",
              "description": "A number; the page that should be viewed",
              "dataType": "integer",
              "paramType": "query"
            },
            {
              "name": "_pageSize",
              "description": "The desired page size. Set to all to retrieve all results in a single page.",
              "dataType": "integer",
              "paramType": "query"
            },
            {
              "name": "_orderBy",
              "description": "The desired variable to sort by. Multiple values can be specified seperated by spaces. Direction of sort can be specified with ASC(?var) and DESC(?var). Default is ascending",
              "allowableValues": {
                "values": [
                  "?activity",
                  "DESC(?activity)",
                  "?count",
                  "DESC(?count)",
                  "?item",
                  "DESC(?item)",
                  "?qudt_label",
                  "DESC(?qudt_label)"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_lens",
              "description": "The Lens name",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
"path": "/pharmacology/filters/units/{act_type}" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Activity Units for Type" ,
          "description":  "A list of units that activities of the specified type have been normalised to.<br><hr><br>Response template: <br><br><hr><br>  ?item <span style=\"BACKGROUND-COLOR: #66FFCC\"> qudt:unit ?unit </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> rdfs:label ?act_label </span> .<br> ?unit <span style=\"BACKGROUND-COLOR: #66FFCC\"> rdfs:label ?unit_labe </span> l<br> ",
          "group": "Pharmacology Filters" ,
          "parameters": [
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "act_type" ,
              "description":  "http://www.openphacts.org/terms/chembl#{act_name}" ,
              "required": true,
              "paramType": "path",
              "dataType": "string"
            },
            {
              "name": "_lens",
              "description": "The Lens name",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
"path": "/tree" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Hierarchies: Root Nodes" ,
          "description":  "A representation of the root classes in each hierachy. The ChEBI Ontology, the Gene Ontology, the Enzyme Classification, and the ChEMBL Target Tree are currently supported.<br><hr><br>Response template: <br><br><hr><br>  ops:conceptHierarchy <span style=\"BACKGROUND-COLOR: #A9A9F5\"> dcterms:hasPart ?g_short </span> .<br> ?g_short <span style=\"BACKGROUND-COLOR: #A9A9F5\"> ops:rootNode ?root_node </span> .<br> ?root_node <span style=\"BACKGROUND-COLOR: #FFFFCC\"> skos:prefLabel ?name </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> skos:prefLabel ?label </span> .<br> &lt;http://purl.uniprot.org/enzyme&gt; <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:prefLabel 'Enzyme Classification' </span> .<br> &lt;http://www.ebi.ac.uk/chembl/target&gt; <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:prefLabel 'ChEMBL Target Hierarchy' </span> .<br> &lt;http://www.ebi.ac.uk/chebi&gt; <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:prefLabel 'ChEBI Ontology' </span> .<br> &lt;http://www.geneontology.org&gt; <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:prefLabel 'GeneOntology' </span> .<br> ",
          "group": "Concept Class Hierarchies" ,
          "parameters": [
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "root" ,
              "description":  "Restrict results by hierarchy. Currently one of 'chembl', 'chebi', 'enzyme', 'go'" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "_lens",
              "description": "The Lens name",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
"path": "/tree/children" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Hierarchies: Child Nodes" ,
          "description":  "A representation of all child nodes of the given class in the supportted hierarchies. The ChEBI Ontology, the Gene Ontology, the Enzyme Classification, and the ChEMBL Target Tree are currently supported.<br><hr><br>Response template: <br><br><hr><br>  ?ops_item <span style=\"BACKGROUND-COLOR: #A9A9F5\"> ops:childNode ?child_node </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> skos:prefLabel ?label </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset ?g_short </span> .<br> ?child_node <span style=\"BACKGROUND-COLOR: #FFFFCC\"> skos:prefLabel ?child_label </span> .<br> &lt;http://purl.uniprot.org/enzyme&gt; <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:prefLabel 'Enzyme Classification' </span> .<br> &lt;http://www.ebi.ac.uk/chembl/target&gt; <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:prefLabel 'ChEMBL Target Hierarchy' </span> .<br> &lt;http://www.ebi.ac.uk/chebi&gt; <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:prefLabel 'ChEBI Ontology' </span> .<br> &lt;http://www.geneontology.org&gt; <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:prefLabel 'GeneOntology' </span> .<br> ",
          "group": "Concept Class Hierarchies" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "A class URI from one of the supported hierarchies. e.g.: http://purl.uniprot.org/enzyme/6.2.-.-" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name": "_lens",
              "description": "The Lens name",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
"path": "/tree/parents" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Hierarchies: Parent Nodes" ,
          "description":  "A representation of all parent nodes of the given class in the supportted hierarchies. The ChEBI Ontology, the Gene Ontology, the Enzyme Classification, and the ChEMBL Target Tree are currently supported.<br><hr><br>Response template: <br><br><hr><br>  ?ops_item <span style=\"BACKGROUND-COLOR: #A9A9F5\"> ops:parentNode ?parent_node </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> skos:prefLabel ?label </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset ?g_short </span> .<br> ?parent_node <span style=\"BACKGROUND-COLOR: #FFFFCC\"> skos:prefLabel ?parent_label </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> skos:prefLabel ?parent_name </span> .<br> &lt;http://purl.uniprot.org/enzyme&gt; <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:prefLabel 'Enzyme Classification' </span> .<br> &lt;http://www.ebi.ac.uk/chembl/target&gt; <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:prefLabel 'ChEMBL Target Hierarchy' </span> .<br> &lt;http://www.ebi.ac.uk/chebi&gt; <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:prefLabel 'ChEBI Ontology' </span> .<br> &lt;http://www.geneontology.org&gt; <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:prefLabel 'GeneOntology' </span> .<br> ",
          "group": "Concept Class Hierarchies" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "A class URI from one of the supported hierarchies. e.g.: http://purl.uniprot.org/enzyme/6.2.-.-" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name": "_lens",
              "description": "The Lens name",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
"path": "/pathways/count" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Pathways: Count" ,
          "description":  "Returns the number of pathways in the cache.<br><hr><br>Response template: <br><br><hr><br>  &lt;http://www.wikipathways.org&gt; <span style=\"BACKGROUND-COLOR: #66FFCC\"> ops:pathway_count ?count </span> .<br> ",
          "group": "Pathway" ,
          "parameters": [
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "pathway_organism" ,
              "description":  "The rdfs:label for the pathway organism (URL encode). e.g.: Homo sapiens." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "_lens",
              "description": "The Lens name",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
"path": "/pathways" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Pathways: List" ,
          "description":  "Returns the list of pathways in the cache.<br><hr><br>Response template: <br><br><hr><br>  ?item <span style=\"BACKGROUND-COLOR: #66FFCC\"> dc:title ?title </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> wp:organism ?organism_uri </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> foaf:page ?page </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> dc:identifier ?identifier </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> dcterms:description ?description </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFCC99\"> wp:pathwayOntology ?ontology </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://www.wikipathways.org&gt; </span> .<br> ?organism_uri <span style=\"BACKGROUND-COLOR: #66FFCC\"> rdfs:label ?organism </span> .<br> ",
          "group": "Pathway" ,
          "parameters": [
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "pathway_organism" ,
              "description":  "The rdfs:label for the pathway organism (URL encode). e.g.: Homo sapiens." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "_page",
              "description": "A number; the page that should be viewed",
              "dataType": "integer",
              "paramType": "query"
            },
            {
              "name": "_pageSize",
              "description": "The desired page size. Set to all to retrieve all results in a single page.",
              "dataType": "integer",
              "paramType": "query"
            },
            {
              "name": "_orderBy",
              "description": "The desired variable to sort by. Multiple values can be specified seperated by spaces. Direction of sort can be specified with ASC(?var) and DESC(?var). Default is ascending",
              "allowableValues": {
                "values": [
                  "?description",
                  "DESC(?description)",
                  "?identifier",
                  "DESC(?identifier)",
                  "?item",
                  "DESC(?item)",
                  "?ontology",
                  "DESC(?ontology)",
                  "?organism",
                  "DESC(?organism)",
                  "?organism_uri",
                  "DESC(?organism_uri)",
                  "?page",
                  "DESC(?page)",
                  "?title",
                  "DESC(?title)"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_lens",
              "description": "The Lens name",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
"path": "/pathway" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Pathway Information" ,
          "description":  "Returns information about a single pathway that corresponds to {uri}.<br><hr><br>Response template: <br><br><hr><br>  ?ops_item <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:exactMatch ?pw_uri </span> .<br> ?pw_uri <span style=\"BACKGROUND-COLOR: #66FFCC\"> sioc:latest_version ?rev </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://www.wikipathways.org&gt; </span> .<br> ?rev <span style=\"BACKGROUND-COLOR: #66FFCC\"> dc:title ?title </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> wp:organism ?organism_uri </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> foaf:page ?page </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> dcterms:description ?description </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFCC99\"> wp:pathwayOntology ?ontology </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #A9A9F5\"> dcterms:hasPart ?part </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://www.wikipathways.org&gt; </span> .<br> ?organism_uri <span style=\"BACKGROUND-COLOR: #66FFCC\"> rdfs:label ?organism </span> .<br> ?part <span style=\"BACKGROUND-COLOR: #66FFCC\"> a ?type </span> .<br> ",
          "group": "Pathway" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "A Pathway URI. e.g.: http://identifiers.org/wikipathways/WP1019" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name": "_lens",
              "description": "The Lens name",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
"path": "/pathway/getCompounds" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Pathway Information: Get Compounds" ,
          "description":  "Returns the compounds that are part of the pathway that corresponds to {uri}.<br><hr><br>Response template: <br><br><hr><br>  ?ops_item <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:exactMatch ?pw_uri </span> .<br> ?pw_uri <span style=\"BACKGROUND-COLOR: #66FFCC\"> sioc:latest_version ?rev </span> .<br> ?rev <span style=\"BACKGROUND-COLOR: #66FFCC\"> dc:title ?title </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #A9A9F5\"> dcterms:hasPart ?metabolite </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://www.wikipathways.org&gt; </span> .<br> ",
          "group": "Pathway" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "A Pathway URI. e.g.: http://identifiers.org/wikipathways/WP1002" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name": "_lens",
              "description": "The Lens name",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
"path": "/pathway/getTargets" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Pathway Information: Get Targets" ,
          "description":  "Returns information targets that are part of the pathway that corresponds to {uri}.<br><hr><br>Response template: <br><br><hr><br>  ?ops_item <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:exactMatch ?pw_uri </span> .<br> ?pw_uri <span style=\"BACKGROUND-COLOR: #66FFCC\"> sioc:latest_version ?rev </span> .<br> ?rev <span style=\"BACKGROUND-COLOR: #66FFCC\"> dc:title ?title </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #A9A9F5\"> dcterms:hasPart ?gene_product </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://www.wikipathways.org&gt; </span> .<br> ",
          "group": "Pathway" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "A Pathway URI. e.g.: http://identifiers.org/wikipathways/WP1008" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name": "_lens",
              "description": "The Lens name",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
"path": "/pathway/getReferences" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Pathway Information: Get Publications" ,
          "description":  "Returns references that are part of the pathway that corresponds to {uri}.<br><hr><br>Response template: <br><br><hr><br>  ?ops_item <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:exactMatch ?pw_uri </span> .<br> ?pw_uri <span style=\"BACKGROUND-COLOR: #66FFCC\"> sioc:latest_version ?rev </span> .<br> ?rev <span style=\"BACKGROUND-COLOR: #66FFCC\"> dc:title ?title </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> dcterms:hasPart ?reference </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://www.wikipathways.org&gt; </span> .<br> ",
          "group": "Pathway" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "A Pathway URI. e.g.: http://identifiers.org/wikipathways/WP1015" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name": "_lens",
              "description": "The Lens name",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
"path": "/pathways/byCompound/count" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Pathways for Compound: Count" ,
          "description":  "Returns the number of pathways which have as part the Metabolite that corresponds to  {uri}.<br><hr><br>Response template: <br><br><hr><br>  &lt;http://www.wikipathways.org&gt; <span style=\"BACKGROUND-COLOR: #66FFCC\"> ops:pathway_count ?count </span> .<br> ",
          "group": "Pathway" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "A compound URI. e.g.: http://www.conceptwiki.org/concept/83931753-9e3f-4e90-b104-e3bcd0b4d833" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "pathway_organism" ,
              "description":  "The rdfs:label for the pathway organism (URL encode).  e.g.: Homo sapiens." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "_lens",
              "description": "The Lens name",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
"path": "/pathways/byCompound" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Pathways for Compound: List" ,
          "description":  "Returns a list of pathways which have as part the Metabolite that corresponds to  {uri}.<br><hr><br>Response template: <br><br><hr><br>  ?item <span style=\"BACKGROUND-COLOR: #66FFCC\"> dc:title ?title </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> wp:organism ?organism_uri </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> foaf:page ?page </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> dc:identifier ?identifier </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> dcterms:description ?description </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFCC99\"> wp:pathwayOntology ?ontology </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> dcterms:hasPart ?pw_uri </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://www.wikipathways.org&gt; </span> .<br> ?organism_uri <span style=\"BACKGROUND-COLOR: #66FFCC\"> rdfs:label ?organism </span> .<br> ?pw_uri <span style=\"BACKGROUND-COLOR: #66FFCC\"> a wp:Metabolite </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:exactMatch ?cw_uri </span> .<br> ?cw_uri <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:prefLabel ?prefLabel </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://www.conceptwiki.org&gt; </span> .<br> ",
          "group": "Pathway" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "A compound URI. e.g.: http://www.conceptwiki.org/concept/83931753-9e3f-4e90-b104-e3bcd0b4d833" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "pathway_organism" ,
              "description":  "The rdfs:label for the pathway organism (URL encode). e.g.: Homo sapiens." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "_page",
              "description": "A number; the page that should be viewed",
              "dataType": "integer",
              "paramType": "query"
            },
            {
              "name": "_pageSize",
              "description": "The desired page size. Set to all to retrieve all results in a single page.",
              "dataType": "integer",
              "paramType": "query"
            },
            {
              "name": "_orderBy",
              "description": "The desired variable to sort by. Multiple values can be specified seperated by spaces. Direction of sort can be specified with ASC(?var) and DESC(?var). Default is ascending",
              "allowableValues": {
                "values": [
                  "?cw_uri",
                  "DESC(?cw_uri)",
                  "?description",
                  "DESC(?description)",
                  "?identifier",
                  "DESC(?identifier)",
                  "?item",
                  "DESC(?item)",
                  "?metabolite",
                  "DESC(?metabolite)",
                  "?ontology",
                  "DESC(?ontology)",
                  "?organism",
                  "DESC(?organism)",
                  "?organism_uri",
                  "DESC(?organism_uri)",
                  "?page",
                  "DESC(?page)",
                  "?prefLabel",
                  "DESC(?prefLabel)",
                  "?pw_uri",
                  "DESC(?pw_uri)",
                  "?title",
                  "DESC(?title)"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_lens",
              "description": "The Lens name",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
"path": "/pathways/byTarget/count" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Pathways for Target: Count" ,
          "description":  "Returns the number of pathways which have as part the Gene Product that corresponds to  {uri}.<br><hr><br>Response template: <br><br><hr><br>  &lt;http://www.wikipathways.org&gt; <span style=\"BACKGROUND-COLOR: #66FFCC\"> ops:pathway_count ?count </span> .<br> ",
          "group": "Pathway" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "A target URI. e.g.: http://identifiers.org/ncbigene/282478" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "pathway_organism" ,
              "description":  "The rdfs:label for the pathway organism (URL encode). e.g.: Homo sapiens." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "_lens",
              "description": "The Lens name",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
"path": "/pathways/byTarget" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Pathways for Target: List" ,
          "description":  "Returns a list of pathways which have as part the Gene Product that corresponds to  {uri}.<br><hr><br>Response template: <br><br><hr><br>  ?item <span style=\"BACKGROUND-COLOR: #66FFCC\"> dc:title ?title </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp; <span style=\"BACKGROUND-COLOR: #66FFCC\"> wp:organism ?organism_uri </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp; <span style=\"BACKGROUND-COLOR: #66FFCC\"> foaf:page ?page </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp; <span style=\"BACKGROUND-COLOR: #66FFCC\"> dc:identifier ?identifier </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp; <span style=\"BACKGROUND-COLOR: #FFFFCC\"> dcterms:description ?description </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp; <span style=\"BACKGROUND-COLOR: #FFCC99\"> wp:pathwayOntology ?ontology </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp; <span style=\"BACKGROUND-COLOR: #66FFCC\"> dcterms:hasPart ?pw_uri </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp; <span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://www.wikipathways.org&gt; </span> .<br> ?organism_uri <span style=\"BACKGROUND-COLOR: #66FFCC\"> rdfs:label ?organism </span> .<br> ?pw_uri <span style=\"BACKGROUND-COLOR: #66FFCC\"> a wp:GeneProduct </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp; <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:exactMatch ?cw_uri </span> .<br> ?cw_uri <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:prefLabel ?prefLabel </span> .<br> ",
          "group": "Pathway" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "A target URI. e.g.: http://identifiers.org/ncbigene/282478" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "pathway_organism" ,
              "description":  "The rdfs:label for the pathway organism (URL encode). e.g.: Homo sapiens." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "_page",
              "description": "A number; the page that should be viewed",
              "dataType": "integer",
              "paramType": "query"
            },
            {
              "name": "_pageSize",
              "description": "The desired page size. Set to all to retrieve all results in a single page.",
              "dataType": "integer",
              "paramType": "query"
            },
            {
              "name": "_orderBy",
              "description": "The desired variable to sort by. Multiple values can be specified seperated by spaces. Direction of sort can be specified with ASC(?var) and DESC(?var). Default is ascending",
              "allowableValues": {
                "values": [
                  "?cw_uri",
                  "DESC(?cw_uri)",
                  "?description",
                  "DESC(?description)",
                  "?gene_product",
                  "DESC(?gene_product)",
                  "?identifier",
                  "DESC(?identifier)",
                  "?item",
                  "DESC(?item)",
                  "?ontology",
                  "DESC(?ontology)",
                  "?organism",
                  "DESC(?organism)",
                  "?organism_uri",
                  "DESC(?organism_uri)",
                  "?page",
                  "DESC(?page)",
                  "?prefLabel",
                  "DESC(?prefLabel)",
                  "?pw_uri",
                  "DESC(?pw_uri)",
                  "?title",
                  "DESC(?title)"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_lens",
              "description": "The Lens name",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
"path": "/pathways/byReference/count" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Pathways for Publication: Count" ,
          "description":  "Returns the number of pathways which have as part the Reference that corresponds to  {uri}.<br><hr><br>Response template: <br><br><hr><br>  &lt;http://www.wikipathways.org&gt; <span style=\"BACKGROUND-COLOR: #66FFCC\"> ops:pathway_count ?count </span> .<br> ",
          "group": "Pathway" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "A reference URI. e.g.: http://identifiers.org/pubmed/9789062" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "pathway_organism" ,
              "description":  "The rdfs:label for the pathway organism (URL encode).  e.g.: Homo sapiens." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "_lens",
              "description": "The Lens name",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
"path": "/pathways/byReference" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Pathways for Publication: List" ,
          "description":  "Returns a list of pathways which have as part the Reference that corresponds to  {uri}.<br><hr><br>Response template: <br><br><hr><br>  ?item <span style=\"BACKGROUND-COLOR: #66FFCC\"> dc:title ?title </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp; <span style=\"BACKGROUND-COLOR: #66FFCC\"> wp:organism ?organism_uri </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp; <span style=\"BACKGROUND-COLOR: #66FFCC\"> foaf:page ?page </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp; <span style=\"BACKGROUND-COLOR: #66FFCC\"> dc:identifier ?identifier </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp; <span style=\"BACKGROUND-COLOR: #FFFFCC\"> dcterms:description ?description </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp; <span style=\"BACKGROUND-COLOR: #FFCC99\"> wp:pathwayOntology ?ontology </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp; <span style=\"BACKGROUND-COLOR: #66FFCC\"> dcterms:hasPart ?pw_uri </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp; <span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://www.wikipathways.org&gt; </span> .<br> ?organism_uri <span style=\"BACKGROUND-COLOR: #66FFCC\"> rdfs:label ?organism </span> .<br> ?pw_uri <span style=\"BACKGROUND-COLOR: #66FFCC\"> a wp:PublicationReferenc </span> e<br> ",
          "group": "Pathway" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "A reference URI. e.g.: http://identifiers.org/pubmed/9789062" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "pathway_organism" ,
              "description":  "The rdfs:label for the pathway organism (URL encode). e.g.: Homo sapiens." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "_page",
              "description": "A number; the page that should be viewed",
              "dataType": "integer",
              "paramType": "query"
            },
            {
              "name": "_pageSize",
              "description": "The desired page size. Set to all to retrieve all results in a single page.",
              "dataType": "integer",
              "paramType": "query"
            },
            {
              "name": "_orderBy",
              "description": "The desired variable to sort by. Multiple values can be specified seperated by spaces. Direction of sort can be specified with ASC(?var) and DESC(?var). Default is ascending",
              "allowableValues": {
                "values": [
                  "?description",
                  "DESC(?description)",
                  "?identifier",
                  "DESC(?identifier)",
                  "?item",
                  "DESC(?item)",
                  "?ontology",
                  "DESC(?ontology)",
                  "?organism",
                  "DESC(?organism)",
                  "?organism_uri",
                  "DESC(?organism_uri)",
                  "?page",
                  "DESC(?page)",
                  "?pw_uri",
                  "DESC(?pw_uri)",
                  "?title",
                  "DESC(?title)"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_lens",
              "description": "The Lens name",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
"path": "/pathways/organisms" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Pathway Organisms" ,
          "description":  "A list of organism URIs and labels for which pathway data is available.<br><hr><br>Response template: <br><br><hr><br>  &lt;http://www.wikipathways.org&gt; <span style=\"BACKGROUND-COLOR: #A9A9F5\"> ops:pathway_organism ?item </span> .<br> ?item <span style=\"BACKGROUND-COLOR: #66FFCC\"> rdfs:label ?label </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp; <span style=\"BACKGROUND-COLOR: #66FFCC\"> ops:pathway_count ?coun </span> t<br> ",
          "group": "Pathway" ,
          "parameters": [
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name": "_page",
              "description": "A number; the page that should be viewed",
              "dataType": "integer",
              "paramType": "query"
            },
            {
              "name": "_pageSize",
              "description": "The desired page size. Set to all to retrieve all results in a single page.",
              "dataType": "integer",
              "paramType": "query"
            },
            {
              "name": "_orderBy",
              "description": "The desired variable to sort by. Multiple values can be specified seperated by spaces. Direction of sort can be specified with ASC(?var) and DESC(?var). Default is ascending",
              "allowableValues": {
                "values": [
                  "?count",
                  "DESC(?count)",
                  "?item",
                  "DESC(?item)",
                  "?label",
                  "DESC(?label)",
                  "?pathway",
                  "DESC(?pathway)"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_lens",
              "description": "The Lens name",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
"path": "/sources" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Data Sources" ,
          "description":  "(UNDER DEVELOPMENT) Returns information about currently loaded data sources.<br><hr><br>Response template: <br><br><hr><br>  &lt;http://www.openphacts.org/linked_data_cache&gt; <span style=\"BACKGROUND-COLOR: #66FFCC\"> a void:Dataset </span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp; <span style=\"BACKGROUND-COLOR: #66FFCC\"> void:subset ?top_dataset </span> .<br> ?top_dataset <span style=\"BACKGROUND-COLOR: #66FFCC\"> foaf:isPrimaryTopicOf ?description </span> .<br> ?dataset <span style=\"BACKGROUND-COLOR: #FFFFCC\"> dcterms:title ?title </span> .<br> ?dataset <span style=\"BACKGROUND-COLOR: #FFCC99\"> void:subset ?subset </span> .<br> ?dataset <span style=\"BACKGROUND-COLOR: #FFFFCC\"> prov:wasDerivedFrom ?derivedFrom </span> .<br> ?dataset <span style=\"BACKGROUND-COLOR: #FFFFCC\"> void:triples ?tripleNo </span> .<br> ?dataset <span style=\"BACKGROUND-COLOR: #FFFFCC\"> void:dataDump ?dataDump </span> .<br> ?dataset <span style=\"BACKGROUND-COLOR: #FFFFCC\"> dcat:landingPage ?landingPage </span> .<br> ?dataset <span style=\"BACKGROUND-COLOR: #FFFFCC\"> foaf:homepage ?homepage </span> .<br> ?dataset <span style=\"BACKGROUND-COLOR: #66FFCC\"> a void:Dataset </span> .<br> ",
          "group": "Data Sources" ,
          "parameters": [
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name": "_lens",
              "description": "The Lens name",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
"path": "/search/freetext" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Free Text to Concept" ,
          "description":  "Returns a set of concept URLs associated to the input free text. Driven by ConceptWiki.<br><hr><br>Response template: <br><br><hr><br>  ?primaryTopic <span style=\"BACKGROUND-COLOR: #66FFCC\"> rdf:type ?searchType </span>;&nbsp;&nbsp;&nbsp;&nbsp;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> ops_api:searchTerm ?searchTerm </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #A9A9F5\"> ops_api:result ?uuidURL </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops_api:limit ?resultsLimit </span>.<br> ?uuidURL <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:prefLabel ?conceptPrefLabel </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> ops_api:match ?match </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFCC99\"> skos:altLabel ?conceptAltLabel </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFCC99\"> ops_api:semanticTag ?tagBNode </span>;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFCC99\"> skos:exactMatch ?urlBNode </span>.<br> ?tagBNode <span style=\"BACKGROUND-COLOR: #66FFCC\"> cw:uuid tagUUID </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:prefLabel ?tagPrefLabel </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> cw:deleted ?deletedFromWikiMarker </span>.<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFCC99\"> skos:altLabel ?tagAltLabel </span>;<br> ?urlBNode <span style=\"BACKGROUND-COLOR: #66FFCC\"> cw:url ?url </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> cw:matchType ?matchType </span>.<br> ",
          "group": "Concept Wiki services" ,
          "parameters": [
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "q" ,
              "description":  "Query; required. Mininum length is 3 characters. E.g. water" ,
              "paramType": "query",
              "required": true,
              "dataType": "string"
            },
            {
              "name":  "limit" ,
              "description":  "Limits the number of results; optional. Minimum value is 1, maximum value is common sense. Default value is 10." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "branch" ,
              "description":  "The search results will be filtered by this source authority; optional. Possible values: 1 = Community, 2 = UMLS, 3 = SwissProt, 4 = ChemSpider, 5 = Computer Inferred, 6 = Pathway Ontology, 7 = WikiPathways" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
"path": "/search/byTag" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Free Text to Concept for Semantic Tag" ,
          "description":  "Search for a set of concept URLs based on free text and an input tag, which specifies the semantic type. Driven by ConceptWiki.<br><hr><br>Response template: <br><br><hr><br>  ?primaryTopic <span style=\"BACKGROUND-COLOR: #66FFCC\"> rdf:type ?searchType</span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> ops_api:searchTerm ?searchTerm</span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> ops_api:tagUUID ?inputTagUUID</span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #A9A9F5\"> ops_api:result ?uuidURL</span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops_api:limit ?resultsLimit</span> .<br> ?uuidURL <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:prefLabel ?conceptPrefLabel</span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> ops_api:match ?match</span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #A9A9F5\"> ops_api:semanticTag ?tagBNode</span> ;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFCC99\"> skos:altLabel ?conceptAltLabel</span> ;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFCC99\"> skos:exactMatch ?urlBNode</span> .<br> ?tagBNode <span style=\"BACKGROUND-COLOR: #66FFCC\"> cw:uuid tagUUID</span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:prefLabel ?tagPrefLabel</span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> cw:deleted ?deletedFromWikiMarker</span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFCC99\"> skos:altLabel ?tagAltLabel</span> .<br> ?urlBNode <span style=\"BACKGROUND-COLOR: #66FFCC\"> cw:url ?url</span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> cw:matchType ?matchType</span> .<br> ",
          "group": "Concept Wiki services" ,
          "parameters": [
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "q" ,
              "description":  "Query; required. Minimum length is 3 characters. E.g. water" ,
              "paramType": "query",
              "required": true,
              "dataType": "string"
            },
            {
              "name":  "limit" ,
              "description":  "Limits the number of results; optional. Minimum value is 1, maximum value is common sense. Default value is 10." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "uuid" ,
              "description":  "UUID of the tag concept; required. Specifies the 'semantic type' required for the search results. E.g. 07a84994-e464-4bbf-812a-a4b96fa3d197 for 'Chemical Viewed Structurally', or eeaec894-d856-4106-9fa1-662b1dc6c6f1 for 'Amino Acid, Peptide, or Protein'" ,
              "paramType": "query",
              "required": true,
              "dataType": "string"
            },
            {
              "name":  "branch" ,
              "description":  "The search results will be filtered by this source authority; optional. Possible values: 1 = Community, 2 = UMLS, 3 = SwissProt, 4 = ChemSpider, 5 = Computer Inferred, 6 = Pathway Ontology, 7 = WikiPathways" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
"path": "/getConceptDescription" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Concept Description" ,
          "description":  "Get the description of a concept, based on a concept URL. Driven by ConceptWiki.<br><hr><br>Response template: <br><br><hr><br>  ?conceptURL <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:prefLabel ?conceptPrefLabel </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFCC99\"> skos:altLabel ?conceptAltLabel </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFCC99\"> ops_api:semanticTag ?tagBNode </span>;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFCC99\"> skos:exactMatch ?urlBNode </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> skos:definition ?definitionText </span>.<br> ?tagBNode <span style=\"BACKGROUND-COLOR: #66FFCC\"> cw:uuid tagUUID </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:prefLabel ?tagPrefLabel </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> cw:deleted ?deletedFromWikiMarker </span>.<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFCC99\"> skos:altLabel ?tagAltLabel </span>;<br> ?urlBNode <span style=\"BACKGROUND-COLOR: #66FFCC\"> cw:url ?url </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> cw:matchType ?matchType </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> void:inDataset ?sourceURL </span>;<br> ?sourceURL <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:prefLabel ?sourcePrefLabel </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> cw:deleted ?deletedFromWikiMarker </span>.<br> ",
          "group": "Concept Wiki services" ,
          "parameters": [
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "uuid" ,
              "description":  "UUID of the concept; required. E.g. 8e3a87ae-345d-4c25-bd7a-5b3221c6e3fa" ,
              "paramType": "query",
              "required": true,
              "dataType": "string"
            },
            {
              "name":  "branch" ,
              "description":  "The search results will be filtered by this source authority; optional. Possible values: 1 = Community, 2 = UMLS, 3 = SwissProt, 4 = ChemSpider, 5 = Computer Inferred, 6 = Pathway Ontology, 7 = WikiPathways" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    }
  ]
}
